{"version":3,"sources":["AppHeader.js","inputs/NumberInput.js","inputs/RadioInput.js","inputs/Slider.js","inputs/TickedSlider.js","inputs/GenericInput.js","model/constants.js","model/electionData.js","ElectionParameters.js","model/rcvModelData.js","ModelParameters.js","Spinner.js","SimulationVisualization.js","hooks/useAsync.js","model/simulationData.js","SimulationResults.js","pages/AboutPage.js","routes.js","pages/SimulationPage.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","props","Navbar","bg","variant","expand","Brand","className","Toggle","Collapse","Nav","routes","map","route","i","Item","key","display","Link","as","to","path","href","NumberInput","dataid","fullWidth","handleChange","helperText","label","max","min","maxVariable","padding","step","value","widthClass","paddingClass","type","onChange","RadioInput","id","options","option","name","checked","parseInt","htmlFor","Slider","maxLabel","minLabel","TickedSlider","ticks","_","range","list","tick","GenericInput","param","formData","setFormData","formInputs","event","transformFunction","updateTransform","arg","formDataCopy","target","console","warn","mmLabels","electionParams","initialValue","electionInputs","info","React","memo","Card","Body","models","apiEndpoint","modelParams","modelInputs","filterDataByModelTypes","formObject","modelType","pick","Object","keys","filter","keySplitFromType","split","hasModelType","Boolean","inputs","selectedModelDataid","setSelectedModelDataid","Header","defaultActiveKey","onSelect","k","model","eventKey","input","idSplitFromType","Spinner","style","height","width","marginTop","role","SimulationVisualization","nextProps","nextState","simulationResults","this","maxSeats","electionSimulations","values","poc_elected_rcv","data","val","x","electionWithoutRelevantWinners","length","push","bins","log","fontSize","containerComponent","voronoiDimension","labelComponent","constrainToVisibleArea","labels","datum","y","fill","cornerRadius","text","textAnchor","axisLabelComponent","dy","dependentAxis","tickLabelComponent","dx","tickValues","slice","Component","useAsync","asyncFunction","immediate","useState","status","setStatus","setValue","error","setError","execute","useCallback","then","response","catch","useEffect","simulationParams","simulationInputs","combineFormData","getSeats","getElectionSimulationCount","apiURL","process","find","getApiEndpoint","a","axios","get","params","simulationResultsRef","useRef","Button","onClick","disabled","maxBins","ref","trigger","content","current","AboutPage","component","initialElectionState","reduce","accum","p","initialModelState","initialSimulationState","electionState","setElectionState","modelState","setModelState","simulationState","setSimulationState","Container","fluid","Row","Col","md","App","basename","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3cf3afd8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nfunction AppHeader(props) {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand>\n        Modeling Representation <br className=\"d-xs-block d-sm-none\" /> with\n        Ranked Choice Voting\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Nav className=\"justify-content-end\">\n          {props.routes.map((route, i) => (\n            <Nav.Item className=\"text-right\" key={route.display}>\n              <Nav.Link as={Link} to={route.path} key={i} href={route.path}>\n                {route.display}\n              </Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AppHeader;\n","import React from \"react\";\n\nfunction NumberInput({\n  dataid,\n  fullWidth,\n  handleChange,\n  helperText,\n  label,\n  max,\n  maxVariable,\n  min,\n  padding = true,\n  step = 1,\n  value,\n}) {\n  const widthClass = fullWidth ? \" col-12 \" : \" col-sm-6 \";\n  const paddingClass = padding ? \" pr-2 pl-2 \" : \"p-0\";\n\n  return (\n    <div className={`${paddingClass} ${widthClass}`}>\n      <label className=\"input-label\">{label}</label>\n      <input\n        type=\"number\"\n        onChange={handleChange}\n        value={value}\n        step={step}\n        min={min}\n        max={max}\n      />\n      <span className=\"d-block input-helper-text\">{helperText}</span>\n    </div>\n  );\n}\n\nexport default NumberInput;\n","import React from \"react\";\n\nfunction RadioInput({\n  dataid,\n  fullWidth,\n  handleChange,\n  id,\n  label,\n  options,\n  padding = true,\n  type,\n  value,\n}) {\n  const widthClass = fullWidth ? \" col-12 \" : \" col-sm-6 \";\n  const paddingClass = padding ? \" pr-2 pl-2 \" : \"\";\n\n  return (\n    <div className={`${paddingClass} ${widthClass}`}>\n      <label className=\"input-label\">{label}</label>\n      <fieldset id={dataid}>\n        {options.map((option) => {\n          return (\n            <div className=\"d-flex align-items-center pb-1\" key={option.id}>\n              <input\n                type=\"radio\"\n                id={option.id}\n                name={dataid}\n                onChange={handleChange}\n                value={option.value}\n                checked={option.value === parseInt(value)}\n                className=\"d-inline\"\n              />\n              <label htmlFor={option.id} className=\"input-option-text\">\n                {option.label}\n              </label>\n            </div>\n          );\n        })}\n      </fieldset>\n    </div>\n  );\n}\n\nexport default RadioInput;\n","import React from \"react\";\n\nfunction Slider({\n  dataid,\n  fullWidth,\n  handleChange,\n  helperText,\n  id,\n  label,\n  max,\n  maxLabel,\n  min,\n  minLabel,\n  padding = true,\n  step = 1,\n  value,\n}) {\n  const widthClass = fullWidth ? \" col-12 \" : \" col-sm-6 \";\n  const paddingClass = padding ? \" pr-2 pl-2 \" : \"\";\n\n  return (\n    <div className={`${paddingClass} ${widthClass}`}>\n      <div className=\"row align-items-center\">\n        <label className=\"input-label col-8\">{label}</label>\n        <div className=\"col-4 text-right\">\n          <input\n            className=\"align-self-center input-value text-right\"\n            onChange={handleChange}\n            type=\"number\"\n            value={value}\n            min={min}\n            max={max}\n            step={step}\n          />\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-between w-100\">\n        <span className=\"input-helper-text align-self-center mr-1\">\n          {minLabel}\n        </span>\n        <span className=\"input-helper-text align-self-center ml-1\">\n          {maxLabel}\n        </span>\n      </div>\n      <input\n        type=\"range\"\n        className=\"w-100\"\n        onChange={handleChange}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n      />\n    </div>\n  );\n}\n\nexport default Slider;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction TickedSlider({\n  dataid,\n  fullWidth,\n  handleChange,\n  helperText,\n  id,\n  label,\n  max,\n  maxLabel,\n  min,\n  minLabel,\n  padding = true,\n  step = 1,\n  value,\n}) {\n  const ticks = _.range(min, max + step, step);\n  const widthClass = fullWidth ? \" col-12 \" : \" col-sm-6 \";\n  const paddingClass = padding ? \" pr-2 pl-2 \" : \"\";\n\n  return (\n    <div className={`${paddingClass} ${widthClass}`}>\n      <label className=\"input-label\">{label}</label>\n      <div className=\"d-flex justify-content-between\">\n        <span className=\"input-helper-text align-self-center mr-1 text-left\">\n          {minLabel}\n        </span>\n        <span className=\"input-helper-text align-self-center ml-1 text-right\">\n          {maxLabel}\n        </span>\n      </div>\n      <input\n        type=\"range\"\n        onChange={handleChange}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        list={`${id}-steplist`}\n        className=\"w-100\"\n      />\n      <datalist\n        id={`${id}-steplist`}\n        className=\"d-flex justify-content-between ticked-slider-datalist\"\n      >\n        {ticks.map((tick, i) => (\n          <option key={tick} value={tick} />\n        ))}\n      </datalist>\n    </div>\n  );\n}\n\nexport default TickedSlider;\n","import React from \"react\";\nimport NumberInput from \"./NumberInput\";\nimport RadioInput from \"./RadioInput\";\nimport Slider from \"./Slider\";\nimport TickedSlider from \"./TickedSlider\";\n\nfunction GenericInput({ param, formData, setFormData, formInputs }) {\n  const handleChange = (param) => (event) => {\n    const transformFunction = param.updateTransform || ((arg) => arg);\n    const formDataCopy = { ...formData };\n    formDataCopy[param.dataid] = transformFunction(\n      event.target.value,\n      param.dataid,\n      formDataCopy\n    );\n    setFormData(formDataCopy);\n  };\n\n  switch (param.type) {\n    case \"number\":\n      return (\n        <NumberInput\n          {...param}\n          max={param.maxVariable ? formData[param.maxVariable] : param.max}\n          handleChange={handleChange(param)}\n          value={formData[param.dataid]}\n        />\n      );\n\n    case \"anti-number\":\n      return (\n        <NumberInput\n          {...param}\n          max={param.maxVariable ? formData[param.maxVariable] : param.max}\n          handleChange={handleChange(param)}\n          value={formData[param.maxVariable] - formData[param.dataid]}\n        />\n      );\n    case \"slider\":\n      return (\n        <Slider\n          {...param}\n          handleChange={handleChange(param)}\n          value={formData[param.dataid]}\n        />\n      );\n    case \"ticked-slider\":\n      return (\n        <TickedSlider\n          {...param}\n          handleChange={handleChange(param)}\n          value={formData[param.dataid]}\n        />\n      );\n    case \"anti-slider\":\n      return (\n        <Slider\n          {...param}\n          handleChange={handleChange(param)}\n          value={param.max - formData[param.dataid] + param.min}\n        />\n      );\n    case \"radio\":\n      return (\n        <RadioInput\n          {...param}\n          handleChange={handleChange(param)}\n          value={formData[param.dataid]}\n          formData={formData}\n        />\n      );\n    default:\n      console.warn(`Seeing a new kind of parameter type: ${param.type}`);\n      return null;\n  }\n}\n\nexport default GenericInput;\n","const mmLabels = {\n  maj: \"Green\",\n  min: \"Purple\",\n};\n\nexport { mmLabels };\n","import { mmLabels } from \"./constants\";\n\nconst electionParams = [\n  {\n    id: \"ballots\",\n    dataid: \"ballots\",\n    initialValue: 1000,\n  },\n  {\n    id: `popMajParty`,\n    dataid: `popMajParty`,\n    initialValue: 70,\n  },\n  {\n    id: \"seatsOpen\",\n    dataid: \"seatsOpen\",\n    initialValue: 5,\n  },\n  {\n    id: `majCandidates`,\n    dataid: `majCandidates`,\n    initialValue: 6,\n  },\n  {\n    id: `minCandidates`,\n    dataid: `minCandidates`,\n    initialValue: 6,\n  },\n  {\n    id: `percentageMajMajSupport`,\n    dataid: `percentageMajMajSupport`,\n    initialValue: 70,\n  },\n  {\n    id: `percentageMinMinSupport`,\n    dataid: `percentageMinMinSupport`,\n    initialValue: 70,\n  },\n];\n\nconst electionInputs = [\n  // Information about the number of voters and the population demographics\n  {\n    id: \"ballots\",\n    dataid: \"ballots\",\n    type: \"number\",\n    step: 10,\n    min: 10,\n    max: 10000,\n    // fullWidth: true,\n    label: \"Voter Population\",\n    helperText: \"Max 10,000\",\n    info: \"The number of voters in each election simulation\",\n  },\n  {\n    id: \"seatsOpen\",\n    dataid: \"seatsOpen\",\n    type: \"number\",\n    step: 1,\n    min: 1,\n    max: 20,\n    label: \"Spots Up For Election\",\n    helperText: \"Max 20\",\n    info: \"The number of open seats open for election in each simulation\",\n  },\n  // Information about the maj candidates and maj-voter support\n  {\n    id: `majCandidates`,\n    dataid: `majCandidates`,\n    type: \"number\",\n    step: 1,\n    min: 1,\n    max: 15,\n    helperText: \"Max 15\",\n    label: `Number of ${mmLabels.maj} candidates running`,\n    info: `The number of ${mmLabels.maj} candidates running for election in each simulation`,\n  },\n  {\n    id: `minCandidates`,\n    dataid: `minCandidates`,\n    type: \"number\",\n    step: 1,\n    min: 1,\n    max: 15,\n    helperText: \"Max 15\",\n    label: `Number of ${mmLabels.min} candidates running`,\n    info: `The number of ${mmLabels.min} candidates running for election in each simulation`,\n  },\n\n  {\n    id: `popMajParty`,\n    dataid: `popMajParty`,\n    type: \"slider\",\n    step: 1,\n    min: 1,\n    max: 99,\n    minLabel: `1%`,\n    maxLabel: `99%`,\n    label: `Percent of voters who are ${mmLabels.maj}`,\n    helperText: `Max 99%`,\n    info: `Assuming all members of the population vote for either ${mmLabels.maj}\n    or ${mmLabels.min}, which percentage votes for ${mmLabels.maj}\n    `,\n  },\n  {\n    id: `popMinParty`,\n    dataid: `popMajParty`,\n    type: \"anti-slider\",\n    step: 1,\n    min: 1,\n    max: 99,\n    updateTransform: (value) => 100 - value,\n    minLabel: `1%`,\n    maxLabel: `99%`,\n    label: `Percent of voters who are ${mmLabels.min}`,\n    helperText: `Max 99%`,\n    info: `Assuming all members of the population vote for either ${mmLabels.min}\n    or ${mmLabels.min}, which percentage votes for ${mmLabels.min}\n    `,\n  },\n  {\n    id: `percentageMajMajSupport`,\n    dataid: `percentageMajMajSupport`,\n    type: \"slider\",\n    step: 1,\n    min: 1,\n    max: 99,\n    minLabel: `1%`,\n    maxLabel: `99%`,\n    label: `${mmLabels.maj} voters typically vote for ${mmLabels.maj} candidates this percent of the time...`,\n    helperText: `Max 99%`,\n  },\n  {\n    id: `percentageMajMinSupport`,\n    dataid: `percentageMajMajSupport`,\n    type: \"anti-slider\",\n    step: 1,\n    min: 1,\n    max: 99,\n    updateTransform: (value) => 100 - value,\n    minLabel: `1%`,\n    maxLabel: `99%`,\n    label: `${mmLabels.maj} voters occasionally vote for ${mmLabels.min} candidates this percent of the time...`,\n    helperText: `Max 99%`,\n    // info: `Assuming all members of the population vote for either ${mmLabels.min}\n    // or ${mmLabels.min}, which percentage votes for ${mmLabels.min}\n    // `,\n  },\n  {\n    id: `percentageMinMinSupport`,\n    dataid: `percentageMinMinSupport`,\n    type: \"slider\",\n    step: 1,\n    min: 1,\n    max: 99,\n    minLabel: `1%`,\n    maxLabel: `99%`,\n    label: `${mmLabels.min} voters typically vote for ${mmLabels.min} candidates this percent of the time...`,\n    helperText: `Max 99%`,\n  },\n  {\n    id: `percentageMinMajSupport`,\n    dataid: `percentageMinMinSupport`,\n    type: \"anti-slider\",\n    step: 1,\n    min: 1,\n    max: 99,\n    updateTransform: (value) => 100 - value,\n    minLabel: `1%`,\n    maxLabel: `99%`,\n    label: `${mmLabels.min} voters occasionally vote for ${mmLabels.maj} candidates this percent of the time...`,\n    helperText: `Max 99%`,\n  },\n];\n\nfunction getSeats(formData) {\n  return parseInt(formData[\"seatsOpen\"]);\n}\n\nexport { electionParams, electionInputs, getSeats };\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport GenericInput from \"./inputs/GenericInput\";\nimport { electionInputs } from \"./model/electionData\";\n\nfunction ElectionParameters({ formData, setFormData }) {\n  return (\n    <>\n      <h1>Election Parameters</h1>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Body className=\"d-flex flex-wrap align-content-start\">\n          {electionInputs.map((param) => {\n            return (\n              <GenericInput\n                key={param.id}\n                param={param}\n                formData={formData}\n                setFormData={setFormData}\n              />\n            );\n          })}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(ElectionParameters);\n","import { mmLabels } from \"./constants\";\nimport _ from \"lodash\";\n\nconst models = [\n  {\n    id: \"plackettLuce\",\n    dataid: \"plackettLuce\",\n    display: \"Plackett-Luce\",\n    apiEndpoint: \"plackettLuce\",\n  },\n  {\n    id: \"bradleyTerry\",\n    dataid: \"bradleyTerry\",\n    display: \"Bradley-Terry\",\n    apiEndpoint: \"bradleyTerry\",\n  },\n  {\n    id: \"alternatingCrossover\",\n    dataid: \"alternatingCrossover\",\n    display: \"Alternating-Crossover\",\n    apiEndpoint: \"alternatingCrossover\",\n  },\n  {\n    id: \"cambridgeSampler\",\n    dataid: \"cambridgeSampler\",\n    display: \"Cambridge Sampler\",\n    apiEndpoint: \"cambridgeSampler\",\n  },\n];\n\nconst modelParams = [\n  ////////////////////////////\n  // PlackettLuce\n  {\n    id: `majMajAffinity-plackettLuce`,\n    dataid: `majMajAffinity-plackettLuce`,\n    initialValue: 0,\n  },\n  {\n    id: `majMinAffinity-plackettLuce`,\n    dataid: `majMinAffinity-plackettLuce`,\n    initialValue: 0,\n  },\n  {\n    id: `minMinAffinity-plackettLuce`,\n    dataid: `minMinAffinity-plackettLuce`,\n    initialValue: 0,\n  },\n  {\n    id: `minMajAffinity-plackettLuce`,\n    dataid: `minMajAffinity-plackettLuce`,\n    initialValue: 0,\n  },\n  ////////////////////////////\n  // BradleyTerry\n  {\n    id: `majMajAffinity-bradleyTerry`,\n    dataid: `majMajAffinity-bradleyTerry`,\n    initialValue: 0,\n  },\n  {\n    id: `majMinAffinity-bradleyTerry`,\n    dataid: `majMinAffinity-bradleyTerry`,\n    initialValue: 0,\n  },\n  {\n    id: `minMinAffinity-bradleyTerry`,\n    dataid: `minMinAffinity-bradleyTerry`,\n    initialValue: 0,\n  },\n  {\n    id: `minMajAffinity-bradleyTerry`,\n    dataid: `minMajAffinity-bradleyTerry`,\n    initialValue: 0,\n  },\n  ////////////////////////////\n  // AlternatingCrossover\n  {\n    id: `majMajCandidateAgreement-alternatingCrossover`,\n    dataid: `majMajCandidateAgreement-alternatingCrossover`,\n    initialValue: 1,\n  },\n  {\n    id: `majMinCandidateAgreement-alternatingCrossover`,\n    dataid: `majMinCandidateAgreement-alternatingCrossover`,\n    initialValue: 1,\n  },\n  {\n    id: `minMinCandidateAgreement-alternatingCrossover`,\n    dataid: `minMinCandidateAgreement-alternatingCrossover`,\n    initialValue: 1,\n  },\n  {\n    id: `minMajCandidateAgreement-alternatingCrossover`,\n    dataid: `minMajCandidateAgreement-alternatingCrossover`,\n    initialValue: 1,\n  },\n  ////////////////////////////\n  // CambridgeSampler\n  {\n    id: `majMajCandidateAgreement-cambridgeSampler`,\n    dataid: `majMajCandidateAgreement-cambridgeSampler`,\n    initialValue: 1,\n  },\n  {\n    id: `majMinCandidateAgreement-cambridgeSampler`,\n    dataid: `majMinCandidateAgreement-cambridgeSampler`,\n    initialValue: 1,\n  },\n  {\n    id: `minMinCandidateAgreement-cambridgeSampler`,\n    dataid: `minMinCandidateAgreement-cambridgeSampler`,\n    initialValue: 1,\n  },\n  {\n    id: `minMajCandidateAgreement-cambridgeSampler`,\n    dataid: `minMajCandidateAgreement-cambridgeSampler`,\n    initialValue: 1,\n  },\n];\n\nconst modelInputs = [\n  ////////////////////////////\n  // PlackettLuce\n  {\n    id: `majMajAffinity-plackettLuce`,\n    dataid: `majMajAffinity-plackettLuce`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1.0,\n    label: `Among ${mmLabels.maj} voters, support for ${mmLabels.maj} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `majMinAffinity-plackettLuce`,\n    dataid: `majMinAffinity-plackettLuce`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.maj} voters, support for ${mmLabels.min} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `minMinAffinity-plackettLuce`,\n    dataid: `minMinAffinity-plackettLuce`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.min} voters, support for ${mmLabels.min} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `minMajAffinity-plackettLuce`,\n    dataid: `minMajAffinity-plackettLuce`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.min} voters, support for ${mmLabels.maj} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  ////////////////////////////\n  // BradleyTerry\n  {\n    id: `majMajAffinity-bradleyTerry`,\n    dataid: `majMajAffinity-bradleyTerry`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1.0,\n    label: `Among ${mmLabels.maj} voters, support for ${mmLabels.maj} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `majMinAffinity-bradleyTerry`,\n    dataid: `majMinAffinity-bradleyTerry`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.maj} voters, support for ${mmLabels.min} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `minMinAffinity-bradleyTerry`,\n    dataid: `minMinAffinity-bradleyTerry`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.min} voters, support for ${mmLabels.min} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `minMajAffinity-bradleyTerry`,\n    dataid: `minMajAffinity-bradleyTerry`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.min} voters, support for ${mmLabels.maj} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  ////////////////////////////\n  // AlternatingCrossover\n  {\n    id: `majMajCandidateAgreement-alternatingCrossover`,\n    dataid: `majMajCandidateAgreement-alternatingCrossover`,\n    type: \"radio\",\n    label: `Among ${mmLabels.maj} voters, does everyone rank ${mmLabels.maj} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-majMajCandidateAgreement-alternatingCrossover\",\n        value: 1,\n        label: `Yes, ${mmLabels.maj} voters rank ${mmLabels.maj} candidates the same way`,\n      },\n      {\n        id: \"random-majMajCandidateAgreement-alternatingCrossover\",\n        value: 0,\n        label: `No, ${mmLabels.maj} voters rank ${mmLabels.maj} candidates differently`,\n      },\n    ],\n  },\n  {\n    id: `majMinCandidateAgreement-alternatingCrossover`,\n    dataid: `majMinCandidateAgreement-alternatingCrossover`,\n    type: \"radio\",\n    label: `Among ${mmLabels.maj} voters, does everyone rank ${mmLabels.min} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-majMinCandidateAgreement-alternatingCrossover\",\n        value: 1,\n        label: `Yes, ${mmLabels.maj} voters rank ${mmLabels.min} candidates the same way`,\n      },\n      {\n        id: \"random-majMinCandidateAgreement-alternatingCrossover\",\n        value: 0,\n        label: `No, ${mmLabels.maj} voters rank ${mmLabels.min} candidates differently`,\n      },\n    ],\n  },\n  {\n    id: `minMinCandidateAgreement-alternatingCrossover`,\n    dataid: `minMinCandidateAgreement-alternatingCrossover`,\n    type: \"radio\",\n    label: `Among ${mmLabels.min} voters, does everyone rank ${mmLabels.min} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-minMinCandidateAgreement-alternatingCrossover\",\n        value: 1,\n        label: `Yes, ${mmLabels.min} voters rank ${mmLabels.min} candidates the same way`,\n      },\n      {\n        id: \"random-minMinCandidateAgreement-alternatingCrossover\",\n        value: 0,\n        label: `No, ${mmLabels.min} voters rank ${mmLabels.min} candidates differently`,\n      },\n    ],\n  },\n  {\n    id: `minMajCandidateAgreement-alternatingCrossover`,\n    dataid: `minMajCandidateAgreement-alternatingCrossover`,\n    type: \"radio\",\n    label: `Among ${mmLabels.min} voters, does everyone rank ${mmLabels.maj} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-minMajCandidateAgreement-alternatingCrossover\",\n        value: 1,\n        label: `Yes, ${mmLabels.min} voters rank ${mmLabels.maj} candidates the same way`,\n      },\n      {\n        id: \"random-minMajCandidateAgreement-alternatingCrossover\",\n        value: 0,\n        label: `No, ${mmLabels.min} voters rank ${mmLabels.maj} candidates differently`,\n      },\n    ],\n  },\n  /////////////1//////////////\n  // Cambridge-Sampler\n  {\n    id: `majMajCandidateAgreement-cambridgeSampler`,\n    dataid: `majMajCandidateAgreement-cambridgeSampler`,\n    type: \"radio\",\n    label: `Among ${mmLabels.maj} voters, does everyone rank ${mmLabels.maj} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-majMajCandidateAgreement-cambridgeSampler\",\n        value: 1,\n        label: `Yes, ${mmLabels.maj} voters rank ${mmLabels.maj} candidates the same way`,\n      },\n      {\n        id: \"random-majMajCandidateAgreement-cambridgeSampler\",\n        value: 0,\n        label: `No, ${mmLabels.maj} voters rank ${mmLabels.maj} candidates differently`,\n      },\n    ],\n  },\n  {\n    id: `majMinCandidateAgreement-cambridgeSampler`,\n    dataid: `majMinCandidateAgreement-cambridgeSampler`,\n    type: \"radio\",\n    label: `Among ${mmLabels.maj} voters, does everyone rank ${mmLabels.min} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-majMinCandidateAgreement-cambridgeSampler\",\n        value: 1,\n        label: `Yes, ${mmLabels.maj} voters rank ${mmLabels.min} candidates the same way`,\n      },\n      {\n        id: \"random-majMinCandidateAgreement-cambridgeSampler\",\n        value: 0,\n        label: `No, ${mmLabels.maj} voters rank ${mmLabels.min} candidates differently`,\n      },\n    ],\n  },\n  {\n    id: `minMinCandidateAgreement-cambridgeSampler`,\n    dataid: `minMinCandidateAgreement-cambridgeSampler`,\n    type: \"radio\",\n    label: `Among ${mmLabels.min} voters, does everyone rank ${mmLabels.min} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-minMinCandidateAgreement-cambridgeSampler\",\n        value: 1,\n        label: `Yes, ${mmLabels.min} voters rank ${mmLabels.min} candidates the same way`,\n      },\n      {\n        id: \"random-minMinCandidateAgreement-cambridgeSampler\",\n        value: 0,\n        label: `No, ${mmLabels.min} voters rank ${mmLabels.min} candidates differently`,\n      },\n    ],\n  },\n  {\n    id: `minMajCandidateAgreement-cambridgeSampler`,\n    dataid: `minMajCandidateAgreement-cambridgeSampler`,\n    type: \"radio\",\n    label: `Among ${mmLabels.min} voters, does everyone rank ${mmLabels.maj} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-minMajCandidateAgreement-cambridgeSampler\",\n        value: 1,\n        label: `Yes, ${mmLabels.min} voters rank ${mmLabels.maj} candidates the same way`,\n      },\n      {\n        id: \"random-minMajCandidateAgreement-cambridgeSampler\",\n        value: 0,\n        label: `No, ${mmLabels.min} voters rank ${mmLabels.maj} candidates differently`,\n      },\n    ],\n  },\n];\n\n// Given a list of inputs, filter down to only those that have a given modelType\nfunction filterInputsByModelType(inputs, modelType) {\n  return inputs.filter((input) => {\n    const id = input.id;\n    const idSplitFromType = id.split(\"-\");\n    const hasModelType = Boolean(idSplitFromType[1]);\n    return hasModelType && idSplitFromType[1] === modelType;\n  });\n}\n\n// Given a formDataObject, filter down to inputs that have no modelType or have a given modelType\nfunction filterDataByModelTypes(formObject, modelType) {\n  return _.pick(\n    formObject,\n    Object.keys(formObject).filter((key) => {\n      const keySplitFromType = key.split(\"-\");\n      const hasModelType = Boolean(keySplitFromType[1]);\n      // Get keys that either don't have a model type\n      //  or have a model type that matches this modelType\n      return (\n        !hasModelType || (hasModelType && keySplitFromType[1] === modelType)\n      );\n    })\n  );\n}\n\nfunction getApiEndpoint(selectedModelDataid) {\n  return models.find((model) => model.dataid === selectedModelDataid)\n    .apiEndpoint;\n}\n\nexport {\n  models,\n  modelParams,\n  modelInputs,\n  filterInputsByModelType,\n  filterDataByModelTypes,\n  getApiEndpoint,\n};\n","import React from \"react\";\nimport { Nav, Card } from \"react-bootstrap\";\nimport GenericInput from \"./inputs/GenericInput\";\nimport {\n  models,\n  modelInputs,\n  filterInputsByModelType,\n} from \"./model/rcvModelData\";\n\nfunction ModelParameters({\n  formData,\n  selectedModelDataid,\n  setFormData,\n  setSelectedModelDataid,\n}) {\n  return (\n    <>\n      <h1>Model Parameters</h1>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Header>\n          <Nav\n            variant=\"tabs\"\n            defaultActiveKey={selectedModelDataid}\n            onSelect={(k) => {\n              setSelectedModelDataid(k);\n            }}\n          >\n            {models.map((model) => (\n              <Nav.Item key={model.id}>\n                <Nav.Link eventKey={model.dataid}>{model.display}</Nav.Link>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </Card.Header>\n        <Card.Body className=\"d-flex flex-wrap align-content-start\">\n          {filterInputsByModelType(modelInputs, selectedModelDataid).map(\n            (param) => (\n              <GenericInput\n                key={param.id}\n                param={param}\n                formData={formData}\n                setFormData={setFormData}\n              />\n            )\n          )}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(ModelParameters);\n","import React from \"react\";\n\nfunction Spinner() {\n  return (\n    <div className=\"d-flex justify-content-center align-items-center w-100 h-100\">\n      <div\n        className=\"spinner-border\"\n        style={{ height: 75, width: 75, marginTop: -75 }}\n        role=\"status\"\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  VictoryChart,\n  VictoryHistogram,\n  VictoryVoronoiContainer,\n  VictoryAxis,\n  VictoryLabel,\n  VictoryTooltip,\n} from \"victory\";\nimport { mmLabels } from \"./model/constants\";\n\nclass SimulationVisualization extends React.Component {\n  // Only re-render when the simulationResults are new\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.simulationResults !== this.props.simulationResults;\n  }\n\n  render() {\n    const {\n      simulationResults = {},\n      maxSeats = 1,\n      electionSimulations,\n    } = this.props;\n    const values = simulationResults.poc_elected_rcv;\n    const data = (values || []).map((val) => ({ x: val }));\n    // Determine the number of elections with no POC winners\n    const electionWithoutRelevantWinners =\n      values && values.length ? electionSimulations - values.length : 0;\n    for (let i = 0; i < electionWithoutRelevantWinners; i++) {\n      data.push({ x: 0 });\n    }\n\n    const bins = _.range(0, maxSeats + 2, 1);\n    console.log(\"bins\", bins);\n    return (\n      <VictoryChart\n        style={{ fontSize: 12 }}\n        // Define hover behavior\n        containerComponent={\n          <VictoryVoronoiContainer\n            voronoiDimension=\"x\"\n            labelComponent={<VictoryTooltip constrainToVisibleArea />}\n            labels={({ datum }) =>\n              `# Elections with ${datum.x - 0.5} ${mmLabels.min} winner(s)\\n${\n                datum.y\n              }`\n            }\n          />\n        }\n      >\n        {/* Display data */}\n        <VictoryHistogram\n          style={{ labels: { fill: \"black\" } }}\n          cornerRadius={0}\n          data={data}\n          bins={bins}\n        />\n        {/* Chart Title */}\n        <VictoryLabel\n          text={`${mmLabels.min} Candidates Elected \\n Across ${electionSimulations} Election(s) `}\n          x={225}\n          y={18}\n          textAnchor=\"middle\"\n        />\n        {/* X axis */}\n        <VictoryAxis\n          label={`Frequency of outcome`}\n          textAnchor=\"middle\"\n          axisLabelComponent={<VictoryLabel dy={-12} />}\n          dependentAxis\n        />\n        {/* Y Axis */}\n        <VictoryAxis\n          label={`Number of ${mmLabels.min} candidates elected`}\n          tickLabelComponent={<VictoryLabel dy={-5} dx={200 / bins.length} />}\n          // tickCount={maxSeats}\n          tickValues={bins.slice(0, bins.length - 1)}\n        />\n      </VictoryChart>\n    );\n  }\n}\n\nexport default SimulationVisualization;\n","import { useState, useEffect, useCallback } from \"react\";\n\n// Hook\nconst useAsync = (asyncFunction, immediate = true) => {\n  const [status, setStatus] = useState(\"idle\");\n  const [value, setValue] = useState(null);\n  const [error, setError] = useState(null);\n\n  // The execute function wraps asyncFunction and\n  // handles setting state for pending, value, and error.\n  // useCallback ensures the below useEffect is not called\n  // on every render, but only if asyncFunction changes.\n  const execute = useCallback(() => {\n    setStatus(\"pending\");\n    setValue(null);\n    setError(null);\n\n    return asyncFunction()\n      .then((response) => {\n        setValue(response);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus(\"error\");\n      });\n  }, [asyncFunction]);\n\n  // Call execute if we want to fire it right away.\n  // Otherwise execute can be called later, such as\n  // in an onClick handler.\n  useEffect(() => {\n    if (immediate) {\n      execute();\n    }\n  }, [execute, immediate]);\n\n  return { execute, status, value, error };\n};\n\nexport default useAsync;\n","const simulationParams = [\n  {\n    id: \"numElectionsEachSimulation\",\n    dataid: \"numElectionsEachSimulation\",\n    initialValue: 1,\n  },\n];\n\nconst simulationInputs = [\n  {\n    id: \"numElectionsEachSimulation\",\n    dataid: \"numElectionsEachSimulation\",\n    type: \"number\",\n    min: 1,\n    max: 15,\n    fullWidth: true,\n    padding: false,\n    label: \"Elections to Simulate\",\n    helperText: \"Max 15\",\n    info: \"The number of elections to simulate with these parameters\",\n  },\n];\n\nfunction getElectionSimulationCount(formData) {\n  return parseInt(formData[\"numElectionsEachSimulation\"]);\n}\n\nexport { simulationParams, simulationInputs, getElectionSimulationCount };\n","import React, { useRef } from \"react\";\nimport axios from \"axios\";\nimport { Button, Card } from \"react-bootstrap\";\nimport ReactToPrint from \"react-to-print\";\n// import EmptyPlaceholder from \"./EmptyPlaceholder\";\nimport Spinner from \"./Spinner\";\nimport SimulationVisualization from \"./SimulationVisualization\";\nimport useAsync from \"./hooks/useAsync\";\nimport GenericInput from \"./inputs/GenericInput\";\nimport { getApiEndpoint, filterDataByModelTypes } from \"./model/rcvModelData\";\nimport { simulationInputs } from \"./model/simulationData\";\n\nfunction SimulationResults({\n  combineFormData,\n  formData,\n  getSeats,\n  getElectionSimulationCount,\n  setFormData,\n  selectedModelDataid,\n}) {\n  // Get the API Endpoint for the selected model\n  const selectedModelEndpoint = getApiEndpoint(selectedModelDataid);\n\n  // Build the API URL\n  const apiURL =\n    process.env.REACT_APP_API_BASEURL +\n    process.env.REACT_APP_API_SLUG +\n    selectedModelEndpoint;\n\n  // Build the function that gets simulation results and\n  const fetchData = async () => {\n    const response = await axios.get(apiURL, {\n      // Filter all the query params by the selectedModelDataid\n      params: filterDataByModelTypes(combineFormData(), selectedModelDataid),\n    });\n    return response.data;\n  };\n\n  // Store the results of simulations in state, as well as request status/error\n  const { execute, status, value, error } = useAsync(fetchData, false);\n\n  // Create a ref to the simulationResults\n  const simulationResultsRef = useRef();\n\n  return (\n    <>\n      <h1>Simulations</h1>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Body className=\"d-flex  flex-column align-content-start\">\n          {/* First div: the inputs in the form of a row, and the button to trigger sims */}\n          <div>\n            {simulationInputs.map((param) => {\n              return (\n                <GenericInput\n                  key={param.id}\n                  param={param}\n                  formData={formData}\n                  padding={false}\n                  setFormData={setFormData}\n                />\n              );\n            })}\n            <Button onClick={execute} disabled={status === \"pending\"}>\n              {status !== \"pending\" ? \"Run Simulation\" : \"Loading...\"}\n            </Button>\n          </div>\n          {/* Second div: the results of the current simulation */}\n          <div className=\"d-flex flex-column\">\n            <h4 className=\"w-100\">Results</h4>\n            {/* When errors are present, log them to the console */}\n            {status === \"error\" && (\n              <div>\n                There was an error processing those simulations.\n                {console.error(error)}\n              </div>\n            )}\n            {/* While loading, display a spinner */}\n            {status === \"pending\" && (\n              <div style={{ height: \"300px\" }}>\n                <Spinner />\n              </div>\n            )}\n            {/* Show an empty viz when no simulations have been triggered or completed  */}\n            {status === \"idle\" && (\n              <SimulationVisualization maxBins={getSeats()} />\n            )}\n            {status === \"success\" && (\n              <>\n                <SimulationVisualization\n                  ref={simulationResultsRef}\n                  maxSeats={getSeats()}\n                  electionSimulations={getElectionSimulationCount()}\n                  simulationResults={value}\n                />\n                <ReactToPrint\n                  trigger={() => <Button>Print Results</Button>}\n                  content={() => simulationResultsRef.current}\n                />\n              </>\n            )}\n          </div>\n          {/* TODO: Implement local history of simulations in order to compare and contrast over time */}\n          {/* <div>\n            <h4>History of Simulations</h4>\n            <EmptyPlaceholder />\n          </div> */}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(SimulationResults);\n","import React from \"react\";\n\nfunction AboutPage() {\n  return (\n    <>\n      <h1>About Page</h1>\n      <p>this is where the about page would go, but is a placeholder for now</p>\n    </>\n  );\n}\n\nexport default AboutPage;\n","import SimulationPage from \"./pages/SimulationPage\";\nimport AboutPage from \"./pages/AboutPage\";\n\n// Config file serving as a single point of truth for all application routes\nconst routes = [\n  {\n    path: `/about`,\n    display: \"About\",\n    component: AboutPage,\n  },\n  {\n    path: `/`,\n    display: \"Home\",\n    component: SimulationPage,\n  },\n];\n\nexport { routes };\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ElectionParameters from \"../ElectionParameters\";\nimport ModelParameters from \"../ModelParameters\";\nimport SimulationResults from \"../SimulationResults\";\nimport { electionParams, getSeats } from \"../model/electionData\";\nimport {\n  simulationParams,\n  getElectionSimulationCount,\n} from \"../model/simulationData\";\nimport { models, modelParams } from \"../model/rcvModelData\";\n\nfunction SimulationPage() {\n  // Set the state of the various parameters\n  const initialElectionState = electionParams.reduce((accum, p) => {\n    accum[p.dataid] = p.initialValue;\n    return accum;\n  }, {});\n  const initialModelState = modelParams.reduce((accum, p) => {\n    accum[p.dataid] = p.initialValue;\n    return accum;\n  }, {});\n  const initialSimulationState = simulationParams.reduce((accum, p) => {\n    accum[p.dataid] = p.initialValue;\n    return accum;\n  }, {});\n  const [electionState, setElectionState] = useState(initialElectionState);\n  const [modelState, setModelState] = useState(initialModelState);\n  const [simulationState, setSimulationState] = useState(\n    initialSimulationState\n  );\n\n  // Store the currently selected model\n  const [selectedModelDataid, setSelectedModelDataid] = useState(\n    models[0].dataid\n  );\n\n  // Combine separate input states\n  const combineFormData = () => {\n    return {\n      ...electionState,\n      ...modelState,\n      ...simulationState,\n    };\n  };\n\n  const getSeatsFromState = () => {\n    return getSeats(electionState);\n  };\n  const getElectionSimulationCountFromState = () => {\n    return getElectionSimulationCount(simulationState);\n  };\n\n  return (\n    <Container fluid>\n      <Row style={{ height: \"max\" }}>\n        <Col className=\"pb-2 d-flex flex-column\">\n          <ElectionParameters\n            formData={electionState}\n            setFormData={setElectionState}\n          />\n          <ModelParameters\n            models={models}\n            selectedModelDataid={selectedModelDataid}\n            setSelectedModelDataid={setSelectedModelDataid}\n            formData={modelState}\n            setFormData={setModelState}\n          />\n        </Col>\n        <Col md={5} className=\"pb-2 d-flex flex-column\">\n          <SimulationResults\n            combineFormData={combineFormData}\n            formData={simulationState}\n            getSeats={getSeatsFromState}\n            getElectionSimulationCount={getElectionSimulationCountFromState}\n            setFormData={setSimulationState}\n            selectedModelDataid={selectedModelDataid}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SimulationPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AppHeader from \"./AppHeader\";\nimport { routes } from \"./routes\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <AppHeader routes={routes} />\n      <Switch>\n        {routes.map((route, i) => (\n          <Route path={route.path} key={i}>\n            <route.component />\n          </Route>\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"fontsource-open-sans\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}