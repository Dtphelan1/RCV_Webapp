{"version":3,"sources":["AppHeader.js","inputs/NumberInput.js","inputs/Slider.js","inputs/TickedSlider.js","inputs/GenericInput.js","ElectionParameters.js","ModelParameters.js","EmptyPlaceholder.js","SimulationResults.js","pages/SimulationPage.js","pages/AboutPage.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","props","Navbar","bg","variant","expand","Brand","className","Toggle","Collapse","Nav","routes","map","route","i","Item","key","display","Link","as","to","path","href","NumberInput","label","handleChange","value","name","min","max","fullWidth","maxVariable","helperText","step","widthClass","type","onChange","Slider","id","minLabel","maxLabel","TickedSlider","ticks","_","range","list","tick","GenericInput","param","formData","setFormData","formInputs","event","transformFunction","updateTransform","arg","formDataCopy","target","console","log","warn","ElectionParameters","Card","Body","models","ModelParameters","useState","selectedModel","setSelectedModel","Header","defaultActiveKey","onSelect","k","model","eventKey","renderSelectedModelParameters","EmptyPlaceholder","SimulationResults","simulationResults","setSimulationResults","fetchData","a","axios","get","process","params","response","data","isEmpty","JSON","stringify","Button","onClick","mmLabels","electionParams","initialValue","electionInputs","info","modelParams","modelInputs","luce","bradleyTerry","alternatingCrossover","cambridgeSampler","simulationParams","simulationInputs","AboutPage","component","paramKeys","concat","p","initialState","forEach","Container","fluid","Row","style","height","Col","xl","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d3111ed3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nfunction AppHeader(props) {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand>\n        Modeling Representation <br className=\"d-xs-block d-sm-none\" /> with\n        Ranked Choice Voting\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Nav className=\"justify-content-end\">\n          {props.routes.map((route, i) => (\n            <Nav.Item className=\"text-right\" key={route.display}>\n              <Nav.Link as={Link} to={route.path} key={i} href={route.path}>\n                {route.display}\n              </Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AppHeader;\n","import React from \"react\";\n\nfunction NumberInput({\n  label,\n  handleChange,\n  value,\n  name,\n  min,\n  max,\n  maxVariable,\n  fullWidth,\n  helperText,\n  step = 1,\n}) {\n  const widthClass = fullWidth ? \" w-100 \" : \" w-50 \";\n  return (\n    <div className={`pr-2 pl-2 ${widthClass}`}>\n      <label className=\"input-label\">{label}</label>\n      <input\n        name={name}\n        type=\"number\"\n        onChange={handleChange}\n        value={value}\n        step={step}\n        min={min}\n        max={max}\n      />\n      <span className=\"d-block input-helper-text\">{helperText}</span>\n    </div>\n  );\n}\n\nexport default NumberInput;\n","import React from \"react\";\n\nfunction Slider({\n  id,\n  label,\n  handleChange,\n  value,\n  name,\n  helperText,\n  min,\n  max,\n  minLabel,\n  maxLabel,\n  step = 1,\n}) {\n  return (\n    <div className=\"d-flex flex-wrap w-50 pr-2 pl-2\">\n      <label className=\"input-label w-100\">{label}</label>\n      <span className=\"ml-auto align-self-center input-value\">{value}%</span>\n      <div className=\"d-flex justify-content-between w-100\">\n        <span className=\"input-helper-text align-self-center mr-1\">\n          {minLabel}\n        </span>\n        <span className=\"input-helper-text align-self-center ml-1\">\n          {maxLabel}\n        </span>\n      </div>\n      <input\n        type=\"range\"\n        className=\"w-100\"\n        onChange={handleChange}\n        name={name}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n      />\n    </div>\n  );\n}\n\nexport default Slider;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction TickedSlider({\n  id,\n  label,\n  handleChange,\n  value,\n  name,\n  helperText,\n  min,\n  max,\n  minLabel,\n  maxLabel,\n  step = 1,\n}) {\n  const ticks = _.range(min, max + step, step);\n  return (\n    <div className=\"d-flex flex-wrap\">\n      <label className=\"input-label w-100\">{label}</label>\n      <div className=\"d-flex justify-content-between w-100\">\n        <span className=\"input-helper-text align-self-center mr-1\">\n          {minLabel}\n        </span>\n        <span className=\"input-helper-text align-self-center ml-1\">\n          {maxLabel}\n        </span>\n      </div>\n      <input\n        type=\"range\"\n        className=\"w-100\"\n        onChange={handleChange}\n        name={name}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        list={`${id}-steplist`}\n      />\n      <datalist\n        id={`${id}-steplist`}\n        className=\"d-flex w-100 justify-content-between ticked-slider-datalist\"\n      >\n        {ticks.map((tick, i) => (\n          <option key={tick} value={tick} />\n        ))}\n      </datalist>\n    </div>\n  );\n}\n\nexport default TickedSlider;\n","import React from \"react\";\nimport NumberInput from \"./NumberInput\";\nimport Slider from \"./Slider\";\nimport TickedSlider from \"./TickedSlider\";\n\nfunction GenericInput({ param, formData, setFormData, formInputs }) {\n  const handleChange = (param) => (event) => {\n    const transformFunction = param.updateTransform || ((arg) => arg);\n    const formDataCopy = { ...formData };\n    formDataCopy[event.target.name] = transformFunction(\n      event.target.value,\n      event.target.name,\n      formDataCopy\n    );\n    console.log(\"event.target.value\", event.target.value);\n    console.log(\"formDataCopy\", formDataCopy);\n    console.log(\n      \"formDataCopy[event.target.name]\",\n      formDataCopy[event.target.name]\n    );\n    setFormData(formDataCopy);\n  };\n\n  switch (param.type) {\n    case \"number\":\n      return (\n        <NumberInput\n          {...param}\n          max={param.maxVariable ? formData[param.maxVariable] : param.max}\n          handleChange={handleChange(param)}\n          value={formData[param.name]}\n        />\n      );\n\n    case \"anti-number\":\n      return (\n        <NumberInput\n          {...param}\n          max={param.maxVariable ? formData[param.maxVariable] : param.max}\n          handleChange={handleChange(param)}\n          value={formData[param.maxVariable] - formData[param.name]}\n        />\n      );\n    case \"slider\":\n      return (\n        <Slider\n          {...param}\n          handleChange={handleChange(param)}\n          value={formData[param.name]}\n        />\n      );\n    case \"ticked-slider\":\n      return (\n        <TickedSlider\n          {...param}\n          handleChange={handleChange(param)}\n          value={formData[param.name]}\n        />\n      );\n    case \"anti-slider\":\n      return (\n        <Slider\n          {...param}\n          handleChange={handleChange(param)}\n          value={param.max - formData[param.name]}\n        />\n      );\n    default:\n      console.warn(`Seeing a new kind of parameter type: ${param.type}`);\n      return null;\n  }\n}\n\nexport default GenericInput;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport GenericInput from \"./inputs/GenericInput\";\n\nfunction ElectionParameters({ formData, setFormData, formInputs }) {\n  return (\n    <>\n      <h1>Election Parameters</h1>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Body className=\"d-flex flex-wrap\">\n          {formInputs.map((param) => {\n            return (\n              <GenericInput\n                key={param.id}\n                param={param}\n                formData={formData}\n                setFormData={setFormData}\n              />\n            );\n          })}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default ElectionParameters;\n","import React, { useState } from \"react\";\nimport { Nav, Card } from \"react-bootstrap\";\nimport GenericInput from \"./inputs/GenericInput\";\n\nconst models = [\n  {\n    id: \"luce\",\n    name: \"luce\",\n    display: \"Luce\",\n  },\n  {\n    id: \"bradleyTerry\",\n    name: \"bradleyTerry\",\n    display: \"Bradley-Terry\",\n  },\n  {\n    id: \"alternatingCrossover\",\n    name: \"alternatingCrossover\",\n    display: \"Alternating-Crossover\",\n  },\n  {\n    id: \"cambridgeSampler\",\n    name: \"cambridgeSampler\",\n    display: \"Cambridge Sampler\",\n  },\n];\n\nfunction renderSelectedModelParameters(\n  selectedModel,\n  formData,\n  setFormData,\n  formInputs\n) {\n  // const SelectedModelParameters =\n  //   models.find((model) => model.name === selectedModel) &&\n  //   models.find((model) => model.name === selectedModel).component;\n  return (\n    <>\n      {formInputs[selectedModel].map((param) => {\n        return (\n          <GenericInput\n            key={param.id}\n            param={param}\n            formData={formData}\n            setFormData={setFormData}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nfunction ModelParameters({ formData, setFormData, formInputs }) {\n  const [selectedModel, setSelectedModel] = useState(models[0].name);\n  return (\n    <>\n      <h1>Model Parameters</h1>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Header>\n          <Nav\n            variant=\"tabs\"\n            defaultActiveKey={models[0].name}\n            onSelect={(k) => {\n              setSelectedModel(k);\n            }}\n          >\n            {models.map((model) => (\n              <Nav.Item key={model.id}>\n                <Nav.Link eventKey={model.name}>{model.display}</Nav.Link>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </Card.Header>\n        <Card.Body className=\"\">\n          {renderSelectedModelParameters(\n            selectedModel,\n            formData,\n            setFormData,\n            formInputs\n          )}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default ModelParameters;\n","import React from \"react\";\n\nfunction EmptyPlaceholder() {\n  return <p>Nothing to display here</p>;\n}\n\nexport default EmptyPlaceholder;\n","import React from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { Button, Card } from \"react-bootstrap\";\nimport GenericInput from \"./inputs/GenericInput\";\nimport EmptyPlaceholder from \"./EmptyPlaceholder\";\n\nfunction SimulationResults({\n  formData,\n  setFormData,\n  formInputs,\n  simulationResults,\n  setSimulationResults,\n}) {\n  const apiURL =\n    process.env.REACT_APP_API_BASEURL + process.env.REACT_APP_API_SLUG;\n  const fetchData = async () => {\n    const response = await axios.get(apiURL, { params: formData });\n    setSimulationResults(response.data);\n  };\n\n  return (\n    <>\n      <h1>Simulations</h1>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Body className=\"\">\n          {formInputs.map((param) => {\n            return (\n              <GenericInput\n                key={param.id}\n                param={param}\n                formData={formData}\n                setFormData={setFormData}\n              />\n            );\n          })}\n          {_.isEmpty(simulationResults) && <EmptyPlaceholder />}\n          {!_.isEmpty(simulationResults) && (\n            <p>{JSON.stringify(simulationResults)}</p>\n          )}\n          <Button onClick={fetchData}>Run Simulation</Button>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default SimulationResults;\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ElectionParameters from \"../ElectionParameters\";\nimport ModelParameters from \"../ModelParameters\";\nimport SimulationResults from \"../SimulationResults\";\n\n// A common lookup table for Majority-Minority labels\nconst mmLabels = {\n  maj: \"Green\",\n  min: \"Purple\",\n};\n\nconst electionParams = [\n  {\n    id: \"ballots\",\n    name: \"ballots\",\n    initialValue: 1000,\n  },\n  {\n    id: `popMajParty`,\n    name: `popMajParty`,\n    initialValue: 70,\n  },\n  {\n    id: \"seatsOpen\",\n    name: \"seatsOpen\",\n    initialValue: 5,\n  },\n  {\n    id: `majCandidates`,\n    name: `majCandidates`,\n    initialValue: 6,\n  },\n  {\n    id: `minCandidates`,\n    name: `minCandidates`,\n    initialValue: 6,\n  },\n  {\n    id: `percentageMajMajSupport`,\n    name: `percentageMajMajSupport`,\n    initialValue: 70,\n  },\n  {\n    id: `percentageMinMinSupport`,\n    name: `percentageMinMinSupport`,\n    initialValue: 70,\n  },\n];\n\nconst electionInputs = [\n  // Information about the number of voters and the population demographics\n  {\n    id: \"ballots\",\n    name: \"ballots\",\n    type: \"number\",\n    step: 10,\n    min: 10,\n    max: 10000,\n    // fullWidth: true,\n    label: \"Voter Population\",\n    helperText: \"Max 10,000\",\n    info: \"The number of voters in each election simulation\",\n  },\n  {\n    id: \"seatsOpen\",\n    name: \"seatsOpen\",\n    type: \"number\",\n    step: 1,\n    min: 1,\n    max: 20,\n    label: \"Spots Up For Election\",\n    helperText: \"Max 20\",\n    info: \"The number of open seats open for election in each simulation\",\n  },\n  // Information about the maj candidates and maj-voter support\n  {\n    id: `majCandidates`,\n    name: `majCandidates`,\n    type: \"number\",\n    step: 1,\n    min: 1,\n    max: 15,\n    helperText: \"Max 15\",\n    label: `Number of ${mmLabels.maj} candidates running`,\n    info: `The number of ${mmLabels.maj} candidates running for election in each simulation`,\n  },\n  {\n    id: `minCandidates`,\n    name: `minCandidates`,\n    type: \"number\",\n    step: 1,\n    min: 1,\n    max: 15,\n    helperText: \"Max 15\",\n    label: `Number of ${mmLabels.min} candidates running`,\n    info: `The number of ${mmLabels.min} candidates running for election in each simulation`,\n  },\n\n  {\n    id: `popMajParty`,\n    name: `popMajParty`,\n    type: \"slider\",\n    step: 1,\n    min: 1,\n    max: 100,\n    minLabel: `1%`,\n    maxLabel: `100%`,\n    label: `Percent of voters who are ${mmLabels.maj}`,\n    helperText: `Max 100%`,\n    info: `Assuming all members of the population vote for either ${mmLabels.maj}\n    or ${mmLabels.min}, which percentage votes for ${mmLabels.maj}\n    `,\n  },\n  {\n    id: `popMinParty`,\n    name: `popMajParty`,\n    type: \"anti-slider\",\n    step: 1,\n    min: 1,\n    max: 100,\n    updateTransform: (value) => 100 - value,\n    minLabel: `1%`,\n    maxLabel: `100%`,\n    label: `Percent of voters who are ${mmLabels.min}`,\n    helperText: `Max 100%`,\n    info: `Assuming all members of the population vote for either ${mmLabels.min}\n    or ${mmLabels.min}, which percentage votes for ${mmLabels.min}\n    `,\n  },\n  {\n    id: `percentageMajMajSupport`,\n    name: `percentageMajMajSupport`,\n    type: \"slider\",\n    step: 1,\n    min: 1,\n    max: 100,\n    minLabel: `1%`,\n    maxLabel: `100%`,\n    label: `${mmLabels.maj} voters typically vote for ${mmLabels.maj} candidates this percent of the time...`,\n    helperText: `Max 100%`,\n  },\n  {\n    id: `percentageMinMinSupport`,\n    name: `percentageMinMinSupport`,\n    type: \"slider\",\n    step: 1,\n    min: 1,\n    max: 100,\n    minLabel: `1%`,\n    maxLabel: `100%`,\n    label: `${mmLabels.min} voters typically vote for ${mmLabels.min} candidates this percent of the time...`,\n    helperText: `Max 100%`,\n  },\n  {\n    id: `percentageMajMinSupport`,\n    name: `percentageMajMajSupport`,\n    type: \"anti-slider\",\n    step: 1,\n    min: 1,\n    max: 100,\n    updateTransform: (value) => 100 - value,\n    minLabel: `1%`,\n    maxLabel: `100%`,\n    label: `${mmLabels.maj} voters occasionally vote for ${mmLabels.min} candidates this percent of the time...`,\n    helperText: `Max 100%`,\n    // info: `Assuming all members of the population vote for either ${mmLabels.min}\n    // or ${mmLabels.min}, which percentage votes for ${mmLabels.min}\n    // `,\n  },\n  {\n    id: `percentageMinMajSupport`,\n    name: `percentageMinMinSupport`,\n    type: \"anti-slider\",\n    step: 1,\n    min: 1,\n    max: 100,\n    updateTransform: (value) => 100 - value,\n    minLabel: `1%`,\n    maxLabel: `100%`,\n    label: `${mmLabels.min} voters occasionally vote for ${mmLabels.maj} candidates this percent of the time...`,\n    helperText: `Max 100%`,\n  },\n];\n\nconst modelParams = [\n  {\n    id: `majMajAffinity`,\n    name: `majMajAffinity`,\n    initialValue: 0,\n  },\n  {\n    id: `majMinAffinity`,\n    name: `majMinAffinity`,\n    initialValue: 0,\n  },\n  {\n    id: `minMinAffinity`,\n    name: `minMinAffinity`,\n    initialValue: 0,\n  },\n  {\n    id: `minMajAffinity`,\n    name: `minMajAffinity`,\n    initialValue: 0,\n  },\n];\n\nconst modelInputs = {\n  luce: [\n    {\n      id: `majMajAffinity`,\n      name: `majMajAffinity`,\n      type: \"ticked-slider\",\n      step: 0.5,\n      min: -1,\n      max: 1.0,\n      label: `Among all ${mmLabels.maj} voters, support for ${mmLabels.maj} candidates is...`,\n      minLabel: \"Split evenly\",\n      maxLabel: \"Leaning towards one candidate\",\n      info: `This value provides information to the model on how even or polarized support\n      is among all ${mmLabels.maj} voters for ${mmLabels.maj} candidates. If support is even,\n      there are no stand out candidates and all are liked evenly. If support is polarized,\n      there is a front-runner ${mmLabels.maj} candidate among all ${mmLabels.maj} voters.`,\n    },\n    {\n      id: `majMinAffinity`,\n      name: `majMinAffinity`,\n      type: \"ticked-slider\",\n      step: 0.5,\n      min: -1,\n      max: 1,\n      label: `Among all ${mmLabels.maj} voters, support for ${mmLabels.min} candidates is...`,\n      minLabel: \"Split evenly\",\n      maxLabel: \"Leaning towards one candidate\",\n      info: `This value provides information to the model on how even or polarized support\n      is among all ${mmLabels.maj} voters for ${mmLabels.min} candidates. If support is even,\n      there are no stand out candidates and all are liked evenly. If support is polarized,\n      there is a front-runner ${mmLabels.min} among all ${mmLabels.maj} candidates.`,\n    },\n    {\n      id: `minMinAffinity`,\n      name: `minMinAffinity`,\n      type: \"ticked-slider\",\n      step: 0.5,\n      min: -1,\n      max: 1,\n      label: `Among all ${mmLabels.min} voters, support for ${mmLabels.min} candidates is...`,\n      minLabel: \"Split evenly\",\n      maxLabel: \"Leaning towards one candidate\",\n      info: `This value provides information to the model on how even or polarized support\n      is among all ${mmLabels.min} voters for ${mmLabels.min} candidates. If support is even,\n      there are no stand out candidates and all are liked evenly. If support is polarized,\n      there is a front-runner ${mmLabels.min} among all ${mmLabels.min} voters.`,\n    },\n    {\n      id: `minMajAffinity`,\n      name: `minMajAffinity`,\n      type: \"ticked-slider\",\n      step: 0.5,\n      min: -1,\n      max: 1,\n      label: `Among all ${mmLabels.min} voters, support for ${mmLabels.maj} candidates is...`,\n      minLabel: \"Split evenly\",\n      maxLabel: \"Leaning towards one candidate\",\n      info: `This value provides information to the model on how even or polarized support\n      is among all ${mmLabels.min} voters for ${mmLabels.maj} candidates. If support is even,\n      there are no stand out candidates and all are liked evenly. If support is polarized,\n      there is a front-runner ${mmLabels.maj} among Majority voters.`,\n    },\n  ],\n  bradleyTerry: [],\n  alternatingCrossover: [],\n  cambridgeSampler: [],\n};\n\nconst simulationParams = [\n  {\n    id: \"numSimulations\",\n    name: \"numSimulations\",\n    initialValue: 1,\n  },\n];\n\nconst simulationInputs = [\n  {\n    id: \"numSimulations\",\n    name: \"numSimulations\",\n    type: \"number\",\n    min: 1,\n    max: 15,\n    label: \"Simulations to Run\",\n    helperText: \"Max 15\",\n    info: \"The number of simulations to run in with these parameters\",\n  },\n];\n\nfunction SimulationPage() {\n  const paramKeys = [].concat(\n    electionParams.map((p) => ({\n      name: p.name,\n      value: p.initialValue,\n    })),\n    modelParams.map((p) => ({\n      name: p.name,\n      value: p.initialValue,\n    })),\n    simulationParams.map((p) => ({\n      name: p.name,\n      value: p.initialValue,\n    }))\n  );\n  // Iterate over all params to set our initial values appropriately\n  const initialState = {};\n  paramKeys.forEach((p) => {\n    initialState[p.name] = p.value;\n  });\n  const [formData, setFormData] = useState(initialState);\n  const [simulationResults, setSimulationResults] = useState({});\n\n  return (\n    <Container fluid>\n      <Row style={{ height: \"max\" }}>\n        <Col className=\"pt-2 d-flex flex-column\">\n          <ElectionParameters\n            formData={formData}\n            setFormData={setFormData}\n            formInputs={electionInputs}\n          />\n        </Col>\n        <Col className=\"pt-2 d-flex flex-column\">\n          <ModelParameters\n            formData={formData}\n            setFormData={setFormData}\n            formInputs={modelInputs}\n          />\n        </Col>\n        <Col xl={12} className=\"pt-2 d-flex flex-column\">\n          <SimulationResults\n            formData={formData}\n            setFormData={setFormData}\n            formInputs={simulationInputs}\n            simulationResults={simulationResults}\n            setSimulationResults={setSimulationResults}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SimulationPage;\n","import React from \"react\";\n\nfunction AboutPage() {\n  return (\n    <>\n      <h1>About Page</h1>\n      <p>this is where the about page would go, but is a placeholder for now</p>\n    </>\n  );\n}\n\nexport default AboutPage;\n","import SimulationPage from \"./pages/SimulationPage\";\nimport AboutPage from \"./pages/AboutPage\";\n\n// Config file serving as a single point of truth for all application routes\nconst routes = [\n  {\n    path: \"/about\",\n    display: \"About\",\n    component: AboutPage,\n  },\n  {\n    path: \"/\",\n    display: \"Home\",\n    component: SimulationPage,\n  },\n];\n\nexport { routes };\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AppHeader from \"./AppHeader\";\nimport { routes } from \"./routes\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <AppHeader routes={routes} />\n      <Switch>\n        {routes.map((route, i) => (\n          <Route path={route.path} key={i}>\n            <route.component />\n          </Route>\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"fontsource-open-sans\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}