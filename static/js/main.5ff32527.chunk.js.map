{"version":3,"sources":["styles/index.scss","styles/radioInput.scss","components/ResetButton.js","inputs/NumberInput.js","inputs/RadioInput.js","inputs/SplitSlider.js","inputs/TickedSlider.js","inputs/GenericInput.js","model/constants.js","model/voterData.js","VoterParameters.js","model/electionData.js","ElectionParameters.js","model/rcvModelData.js","ModelParameters.js","components/Spinner.js","components/EmptyPlaceholder.js","components/SimulationStatsTable.js","components/SimulationVisualization.js","hooks/useAsync.js","model/simulationData.js","SimulationInformation.js","hooks/useLocalStorage.js","pages/AboutPage.js","pages/routes.js","pages/SimulationPage.js","AppHeader.js","App.js","serviceWorker.js","index.js","styles/_variables.scss"],"names":["module","exports","ResetButton","onClick","className","size","NumberInput","dataid","fullWidth","handleChange","helperText","label","max","min","maxVariable","padding","step","value","widthClass","paddingClass","type","onChange","e","target","RadioInput","id","options","map","option","key","name","checked","parseInt","htmlFor","SplitSlider","colorFlip","leftLabel","rightLabel","orientation","Number","format","val","TickedSlider","maxLabel","minLabel","ticks","_","range","values","marks","renderTrack","props","children","style","height","width","borderRadius","boxShadow","marginBottom","background","getTrackBackground","colors","variables","primary","renderThumb","renderMark","GenericInput","param","formData","setFormData","formInputs","transformFunction","updateTransform","arg","formDataCopy","console","warn","mmLabels","voterParams","initialValue","voterInputs","info","React","memo","resetData","Card","Body","electionParams","electionInputs","models","display","apiEndpoint","modelParams","modelsUsed","modelInputs","getModelFromDisplay","selectedModelDisplay","find","model","selectedModel","setSelectedModel","Header","Nav","variant","defaultActiveKey","onSelect","keyForEachModel","Item","Link","eventKey","inputs","modelType","modelDataid","filter","input","includes","filterInputsByModelType","Spinner","marginTop","role","EmptyPlaceholder","KeyValueTable","kv","Object","keys","length","Table","striped","borderless","hover","entries","k","v","data","maxSeats","stats","isEmpty","Min","Max","Mode","modeFast","Mean","mean","toFixed","standardDeviation","statsMarginalized","statsDisplay","Row","Col","sm","SimulationResultsHistogram","displayMajResults","electionSimulations","pocData","x","electionWithoutRelevantWinners","i","push","bins","barColor","green","purple","demographicVisualized","parent","fontSize","containerComponent","maxWidth","margin","labels","fill","cornerRadius","labelComponent","constrainToVisibleArea","datum","y","text","isUndefined","textAnchor","axisLabelComponent","dy","dependentAxis","tickLabelComponent","dx","tickValues","slice","SimulationVisualization","toggleMajResults","setState","state","nextProps","nextState","simulationResults","this","simulationParams","pocElected","poc_elected_rcv","relevantElected","pocWinners","switchWillVisualize","Form","Check","Component","useAsync","asyncFunction","immediate","useState","status","setStatus","setValue","error","setError","execute","useCallback","then","response","catch","useEffect","simulationInputs","SaveButton","simulationVisualizationRef","Button","exportComponentAsPNG","RunButton","disabled","combineFormData","getSeats","getElectionSimulationCount","apiURL","process","getApiEndpoint","relevantParams","formObject","pick","keySplitFromType","split","hasModelType","Boolean","filterDataByModelTypes","a","axios","get","params","useRef","maxBins","ref","useLocalStorage","stateObjectName","storedState","window","localStorage","getItem","isNull","parsedStoredState","JSON","parse","validStateObjectKeys","storedStateKeys","isEqual","removeItem","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","AboutPage","routes","path","component","Container","href","isHome","initialElectionState","reduce","accum","p","electionState","setElectionState","initialVoterState","voterState","setVoterState","initialModelState","modelState","setModelState","initialSimulationState","simulationState","setSimulationState","fluid","md","getHomePath","route","AppHeader","Navbar","expand","Brand","Toggle","Collapse","reverse","as","to","App","basename","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5ff32527.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#c08c33\",\"green\":\"#4b9460\",\"purple\":\"#4b3f72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#c08c33\",\"green\":\"#4b9460\",\"purple\":\"#4b3f72\"};","import React from \"react\";\nimport { RefreshCw } from \"react-feather\";\n\nfunction ResetButton({ onClick }) {\n  return (\n    <button\n      onClick={onClick}\n      // variant=\"outline-primary\"\n      className=\"btn mr-0 ml-1 mt-2 mb-2 d-flex justify-content-center align-items-center\"\n    >\n      <RefreshCw size={18} className=\"mr-1\" />\n      Reset\n    </button>\n  );\n}\n\nexport default ResetButton;\n","import React from \"react\";\n\nfunction NumberInput({\n  dataid,\n  fullWidth,\n  handleChange,\n  helperText,\n  label,\n  max,\n  maxVariable,\n  min,\n  padding = true,\n  step = 1,\n  value,\n}) {\n  const widthClass = fullWidth ? \" col-12 \" : \" col-sm-6 \";\n  const paddingClass = padding ? \" pr-2 pl-2 \" : \"p-0\";\n\n  return (\n    <div className={`${paddingClass} ${widthClass}`}>\n      <label className=\"input-label\">{label}</label>\n      <input\n        type=\"number\"\n        onChange={(e) => handleChange(e.target.value)}\n        value={value}\n        step={step}\n        min={min}\n        max={max}\n      />\n      <span className=\"d-block input-helper-text\">{helperText}</span>\n    </div>\n  );\n}\n\nexport default NumberInput;\n","import React from \"react\";\nimport \"../styles/radioInput.scss\";\n\nfunction RadioInput({\n  dataid,\n  fullWidth,\n  handleChange,\n  id,\n  label,\n  options,\n  padding = true,\n  type,\n  value,\n}) {\n  const widthClass = fullWidth ? \" col-12 \" : \" col-sm-6 \";\n  const paddingClass = padding ? \" pr-2 pl-2 \" : \"\";\n\n  return (\n    <div className={`${paddingClass} ${widthClass}`}>\n      <label className=\"input-label\">{label}</label>\n      <fieldset id={dataid}>\n        {options.map((option) => {\n          return (\n            <div className=\"d-flex align-items-center pb-1\" key={option.id}>\n              <input\n                type=\"radio\"\n                id={option.id}\n                name={dataid}\n                onChange={(e) => handleChange(e.target.value)}\n                value={option.value}\n                checked={option.value === parseInt(value)}\n                className=\"d-inline\"\n              />\n              <label htmlFor={option.id} className=\"radio-option-text\">\n                {option.label}\n              </label>\n            </div>\n          );\n        })}\n      </fieldset>\n    </div>\n  );\n}\n\nexport default RadioInput;\n","import React from \"react\";\nimport Slider from \"react-rangeslider\";\n// To include the default styles\n\nfunction SplitSlider({\n  className,\n  colorFlip,\n  fullWidth,\n  handleChange,\n  id,\n  label,\n  leftLabel,\n  rightLabel,\n  max,\n  min,\n  padding = true,\n  step = 1,\n  value,\n}) {\n  const widthClass = fullWidth ? \" col-12 \" : \" col-sm-6 \";\n  const paddingClass = padding ? \" pr-2 pl-2 \" : \"\";\n\n  return (\n    <div className={`${paddingClass} ${widthClass}`}>\n      <label className=\"input-label w-75\">{label}</label>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <input\n          className=\"input-value\"\n          onChange={(e) => handleChange(e.target.value)}\n          type=\"number\"\n          value={value}\n          min={min}\n          max={max}\n          step={step}\n        />\n        <span className=\"pl-3 pr-3 w-100\">\n          <Slider\n            orientation=\"horizontal\"\n            className={colorFlip && \"color-flip\"}\n            value={Number(value)}\n            min={min}\n            max={max}\n            step={step}\n            format={(val) => `${val}% - ${max - val}%`}\n            onChange={(val) => handleChange(val)}\n          />\n        </span>\n        <input\n          className=\"input-value text-right\"\n          onChange={(e) => handleChange(max - e.target.value)}\n          type=\"number\"\n          value={max - value}\n          min={min}\n          max={max}\n          step={step}\n        />\n      </div>\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"text-left\">\n          <label className=\"d-block input-helper-text mr-1 mb-0\">\n            {leftLabel}\n          </label>\n        </div>\n        <div className=\"text-right\">\n          <label className=\"d-block input-helper-text ml-1  mb-0\">\n            {rightLabel}\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SplitSlider;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { Range, getTrackBackground } from \"react-range\";\nimport variables from \"../styles/_variables.scss\";\n\nfunction TickedSlider({\n  dataid,\n  fullWidth,\n  handleChange,\n  helperText,\n  id,\n  label,\n  max,\n  maxLabel,\n  min,\n  minLabel,\n  padding = true,\n  step = 1,\n  value,\n}) {\n  const ticks = _.range(min, max + step, step);\n  const widthClass = fullWidth ? \" col-12 \" : \" col-sm-6 \";\n  const paddingClass = padding ? \" pr-2 pl-2 \" : \"\";\n\n  return (\n    <div className={`${paddingClass} ${widthClass}`}>\n      <label className=\"input-label\">{label}</label>\n      <div className=\"d-flex mb-2 justify-content-between\">\n        <span className=\"input-helper-text align-self-center mr-1 text-left\">\n          {minLabel}\n        </span>\n        <span className=\"input-helper-text align-self-center ml-1 text-right\">\n          {maxLabel}\n        </span>\n      </div>\n      <Range\n        onChange={(values) => handleChange(values[0])}\n        values={[value]}\n        min={min}\n        max={max}\n        step={step}\n        marks={ticks}\n        renderTrack={({ props, children }) => (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              height: \"6px\",\n              width: \"100%\",\n              borderRadius: \"10px\",\n              boxShadow: \"inset 0 1px 3px rgba(0, 0, 0, 0.4)\",\n              marginBottom: \"6px\",\n              background: getTrackBackground({\n                values: [value],\n                colors: [variables.primary, \"#ccc\"],\n                min: min,\n                max: max,\n              }),\n            }}\n          >\n            {children}\n          </div>\n        )}\n        renderThumb={({ props }) => <div {...props} className=\"ticked_thumb\" />}\n        renderMark={({ props }) => <div {...props} className=\"ticked_mark\" />}\n      />\n    </div>\n  );\n}\n\nexport default TickedSlider;\n","import React from \"react\";\nimport NumberInput from \"./NumberInput\";\nimport RadioInput from \"./RadioInput\";\nimport Slider from \"./SplitSlider\";\nimport TickedSlider from \"./TickedSlider\";\n\nfunction GenericInput({ param, formData, setFormData, formInputs }) {\n  const handleChange = (param) => (value) => {\n    const transformFunction = param.updateTransform || ((arg) => arg);\n    const formDataCopy = { ...formData };\n    formDataCopy[param.dataid] = transformFunction(\n      value,\n      param.dataid,\n      formDataCopy\n    );\n    setFormData(formDataCopy);\n  };\n\n  switch (param.type) {\n    case \"number\":\n      return (\n        <NumberInput\n          {...param}\n          max={param.maxVariable ? formData[param.maxVariable] : param.max}\n          handleChange={handleChange(param)}\n          value={formData[param.dataid]}\n        />\n      );\n    case \"split-slider\":\n      return (\n        <Slider\n          {...param}\n          handleChange={handleChange(param)}\n          value={formData[param.dataid]}\n        />\n      );\n    case \"ticked-slider\":\n      return (\n        <TickedSlider\n          {...param}\n          handleChange={handleChange(param)}\n          value={formData[param.dataid]}\n        />\n      );\n    case \"radio\":\n      return (\n        <RadioInput\n          {...param}\n          handleChange={handleChange(param)}\n          value={formData[param.dataid]}\n          formData={formData}\n        />\n      );\n    default:\n      console.warn(`Seeing a new kind of parameter type: ${param.type}`);\n      return null;\n  }\n}\n\nexport default GenericInput;\n","const mmLabels = {\n  maj: \"Green\",\n  min: \"Purple\",\n};\n\nexport { mmLabels };\n","import { mmLabels } from \"./constants\";\n\nconst voterParams = [\n  {\n    id: `popMajParty`,\n    dataid: `popMajParty`,\n    initialValue: 70,\n  },\n  {\n    id: `percentageMajCohesion`,\n    dataid: `percentageMajCohesion`,\n    initialValue: 70,\n  },\n  {\n    id: `percentageMinCohesion`,\n    dataid: `percentageMinCohesion`,\n    initialValue: 70,\n  },\n];\n\nconst voterInputs = [\n  {\n    id: `popMajParty`,\n    dataid: `popMajParty`,\n    type: \"split-slider\",\n    fullWidth: true,\n    step: 1,\n    min: 0,\n    max: 100,\n    leftLabel: `Percent ${mmLabels.maj}`,\n    rightLabel: `Percent ${mmLabels.min}`,\n    label: `Percentage of population that is ${mmLabels.maj} vs ${mmLabels.min}`,\n    info: `Assuming all members of the population vote for either ${mmLabels.maj}\n    or ${mmLabels.min}, which percentage votes for ${mmLabels.maj}\n    `,\n  },\n  {\n    id: `percentageMajCohesion`,\n    dataid: `percentageMajCohesion`,\n    type: \"split-slider\",\n    fullWidth: true,\n    step: 1,\n    min: 0,\n    max: 100,\n    leftLabel: `${mmLabels.maj} cohesion`,\n    rightLabel: `${mmLabels.maj} crossover`,\n    label: `${mmLabels.maj} voter cohesion and crossover`,\n    helperText: `Max 100%`,\n  },\n  {\n    id: `percentageMinCohesion`,\n    dataid: `percentageMinCohesion`,\n    type: \"split-slider\",\n    colorFlip: true,\n    fullWidth: true,\n    step: 1,\n    min: 0,\n    max: 100,\n    leftLabel: `${mmLabels.min} cohesion`,\n    rightLabel: `${mmLabels.min} crossover`,\n    label: `${mmLabels.min} voters cohesion and crossover`,\n    helperText: `Max 100%`,\n  },\n];\n\nexport { voterParams, voterInputs };\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport ResetButton from \"./components/ResetButton\";\n\nimport GenericInput from \"./inputs/GenericInput\";\nimport { voterInputs } from \"./model/voterData\";\n\nfunction VoterParameters({ formData, setFormData, resetData }) {\n  return (\n    <>\n      <div className=\"d-flex\">\n        <h1>Voter Behaviors</h1>\n        <ResetButton onClick={resetData} />\n      </div>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Body className=\"d-flex flex-wrap align-content-start\">\n          {voterInputs.map((param) => {\n            return (\n              <GenericInput\n                key={param.id}\n                param={param}\n                formData={formData}\n                setFormData={setFormData}\n              />\n            );\n          })}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(VoterParameters);\n","import { mmLabels } from \"./constants\";\n\nconst electionParams = [\n  {\n    id: \"ballots\",\n    dataid: \"ballots\",\n    initialValue: 1000,\n  },\n  {\n    id: \"seatsOpen\",\n    dataid: \"seatsOpen\",\n    initialValue: 5,\n  },\n  {\n    id: `majCandidates`,\n    dataid: `majCandidates`,\n    initialValue: 6,\n  },\n  {\n    id: `minCandidates`,\n    dataid: `minCandidates`,\n    initialValue: 6,\n  },\n];\n\nconst electionInputs = [\n  {\n    id: \"ballots\",\n    dataid: \"ballots\",\n    type: \"number\",\n    step: 10,\n    min: 1,\n    max: 10000,\n    // fullWidth: true,\n    label: \"Ballots cast\",\n    helperText: \"Max 10,000\",\n    info: \"The number of voters in each election simulation\",\n  },\n  {\n    id: \"seatsOpen\",\n    dataid: \"seatsOpen\",\n    type: \"number\",\n    step: 1,\n    min: 0,\n    max: 20,\n    label: \"Seats open for election\",\n    helperText: \"Max 20\",\n    info: \"The number of open seats open for election in each simulation\",\n  },\n  {\n    id: `majCandidates`,\n    dataid: `majCandidates`,\n    type: \"number\",\n    step: 1,\n    min: 0,\n    max: 15,\n    helperText: \"Max 15\",\n    label: `Number of ${mmLabels.maj} candidates`,\n    info: `The number of ${mmLabels.maj} candidates running for election in each simulation`,\n  },\n  {\n    id: `minCandidates`,\n    dataid: `minCandidates`,\n    type: \"number\",\n    step: 1,\n    min: 0,\n    max: 15,\n    helperText: \"Max 15\",\n    label: `Number of ${mmLabels.min} candidates`,\n    info: `The number of ${mmLabels.min} candidates running for election in each simulation`,\n  },\n];\n\nfunction getSeats(formData) {\n  return parseInt(formData[\"seatsOpen\"]);\n}\n\nexport { electionParams, electionInputs, getSeats };\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport ResetButton from \"./components/ResetButton\";\n\nimport GenericInput from \"./inputs/GenericInput\";\nimport { electionInputs } from \"./model/electionData\";\n\nfunction ElectionParameters({ formData, setFormData, resetData }) {\n  return (\n    <>\n      <div className=\"d-flex\">\n        <h1>Election Details</h1>\n        <ResetButton onClick={resetData} />\n      </div>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Body className=\"d-flex flex-wrap align-content-start\">\n          {electionInputs.map((param) => {\n            return (\n              <GenericInput\n                key={param.id}\n                param={param}\n                formData={formData}\n                setFormData={setFormData}\n              />\n            );\n          })}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(ElectionParameters);\n","import { mmLabels } from \"./constants\";\nimport _ from \"lodash\";\n\nconst models = [\n  {\n    id: \"plackettLuce\",\n    dataid: \"plackettLuce\",\n    display: \"Plackett-Luce\",\n    apiEndpoint: \"plackettLuce\",\n  },\n  {\n    id: \"bradleyTerry\",\n    dataid: \"bradleyTerry\",\n    display: \"Bradley-Terry\",\n    apiEndpoint: \"bradleyTerry\",\n  },\n  {\n    id: \"alternatingCrossover\",\n    dataid: \"alternatingCrossover\",\n    display: \"Alternating Crossover\",\n    apiEndpoint: \"alternatingCrossover\",\n  },\n  {\n    id: \"cambridgeSampler\",\n    dataid: \"cambridgeSampler\",\n    display: \"Cambridge Sampler\",\n    apiEndpoint: \"cambridgeSampler\",\n  },\n];\n\nconst modelParams = [\n  ////////////////////////////////\n  // PlackettLuce & BradleyTerry\n  {\n    id: `majMajAffinity`,\n    modelsUsed: [\"bradleyTerry\", \"plackettLuce\"],\n    dataid: `majMajAffinity`,\n    initialValue: 0,\n  },\n  {\n    id: `majMinAffinity`,\n    modelsUsed: [\"bradleyTerry\", \"plackettLuce\"],\n    dataid: `majMinAffinity`,\n    initialValue: 0,\n  },\n  {\n    id: `minMinAffinity`,\n    modelsUsed: [\"bradleyTerry\", \"plackettLuce\"],\n    dataid: `minMinAffinity`,\n    initialValue: 0,\n  },\n  {\n    id: `minMajAffinity`,\n    modelsUsed: [\"bradleyTerry\", \"plackettLuce\"],\n    dataid: `minMajAffinity`,\n    initialValue: 0,\n  },\n  ////////////////////////////////////////////\n  // AlternatingCrossover & CambridgeSampler\n  {\n    id: `majMajCandidateAgreement`,\n    modelsUsed: [\"alternatingCrossover\", \"cambridgeSampler\"],\n    dataid: `majMajCandidateAgreement`,\n    initialValue: 1,\n  },\n  {\n    id: `majMinCandidateAgreement`,\n    modelsUsed: [\"alternatingCrossover\", \"cambridgeSampler\"],\n    dataid: `majMinCandidateAgreement`,\n    initialValue: 1,\n  },\n  {\n    id: `minMinCandidateAgreement`,\n    modelsUsed: [\"alternatingCrossover\", \"cambridgeSampler\"],\n    dataid: `minMinCandidateAgreement`,\n    initialValue: 1,\n  },\n  {\n    id: `minMajCandidateAgreement`,\n    modelsUsed: [\"alternatingCrossover\", \"cambridgeSampler\"],\n    dataid: `minMajCandidateAgreement`,\n    initialValue: 1,\n  },\n];\n\nconst modelInputs = [\n  ////////////////////////////\n  // PlackettLuce\n  {\n    id: `majMajAffinity`,\n    modelsUsed: [\"bradleyTerry\", \"plackettLuce\"],\n    dataid: `majMajAffinity`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1.0,\n    label: `Among ${mmLabels.maj} voters, support for ${mmLabels.maj} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `majMinAffinity`,\n    modelsUsed: [\"bradleyTerry\", \"plackettLuce\"],\n    dataid: `majMinAffinity`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.maj} voters, support for ${mmLabels.min} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `minMinAffinity`,\n    modelsUsed: [\"bradleyTerry\", \"plackettLuce\"],\n    dataid: `minMinAffinity`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.min} voters, support for ${mmLabels.min} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  {\n    id: `minMajAffinity`,\n    modelsUsed: [\"bradleyTerry\", \"plackettLuce\"],\n    dataid: `minMajAffinity`,\n    type: \"ticked-slider\",\n    fullWidth: true,\n    step: 0.5,\n    min: -1,\n    max: 1,\n    label: `Among ${mmLabels.min} voters, support for ${mmLabels.maj} candidates is...`,\n    minLabel: \"Split evenly\",\n    maxLabel: \"Leaning towards one candidate\",\n  },\n  ////////////////////////////\n  // AlternatingCrossover\n  {\n    id: `majMajCandidateAgreement`,\n    modelsUsed: [\"alternatingCrossover\", \"cambridgeSampler\"],\n    dataid: `majMajCandidateAgreement`,\n    type: \"radio\",\n    label: `Among ${mmLabels.maj} voters, does everyone rank ${mmLabels.maj} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-majMajCandidateAgreement\",\n        value: 1,\n        label: `Yes, ${mmLabels.maj} voters rank ${mmLabels.maj} candidates the same way`,\n      },\n      {\n        id: \"random-majMajCandidateAgreement\",\n        value: 0,\n        label: `No, ${mmLabels.maj} voters rank ${mmLabels.maj} candidates randomly`,\n      },\n    ],\n  },\n  {\n    id: `majMinCandidateAgreement`,\n    modelsUsed: [\"alternatingCrossover\", \"cambridgeSampler\"],\n    dataid: `majMinCandidateAgreement`,\n    type: \"radio\",\n    label: `Among ${mmLabels.maj} voters, does everyone rank ${mmLabels.min} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-majMinCandidateAgreement\",\n        value: 1,\n        label: `Yes, ${mmLabels.maj} voters rank ${mmLabels.min} candidates the same way`,\n      },\n      {\n        id: \"random-majMinCandidateAgreement\",\n        value: 0,\n        label: `No, ${mmLabels.maj} voters rank ${mmLabels.min} candidates randomly`,\n      },\n    ],\n  },\n  {\n    id: `minMajCandidateAgreement`,\n    modelsUsed: [\"alternatingCrossover\", \"cambridgeSampler\"],\n    dataid: `minMajCandidateAgreement`,\n    type: \"radio\",\n    label: `Among ${mmLabels.min} voters, does everyone rank ${mmLabels.maj} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-minMajCandidateAgreement\",\n        value: 1,\n        label: `Yes, ${mmLabels.min} voters rank ${mmLabels.maj} candidates the same way`,\n      },\n      {\n        id: \"random-minMajCandidateAgreement\",\n        value: 0,\n        label: `No, ${mmLabels.min} voters rank ${mmLabels.maj} candidates randomly`,\n      },\n    ],\n  },\n  {\n    id: `minMinCandidateAgreement`,\n    modelsUsed: [\"alternatingCrossover\", \"cambridgeSampler\"],\n    dataid: `minMinCandidateAgreement`,\n    type: \"radio\",\n    label: `Among ${mmLabels.min} voters, does everyone rank ${mmLabels.min} candidates the same way?`,\n    options: [\n      {\n        id: \"uniform-minMinCandidateAgreement\",\n        value: 1,\n        label: `Yes, ${mmLabels.min} voters rank ${mmLabels.min} candidates the same way`,\n      },\n      {\n        id: \"random-minMinCandidateAgreement\",\n        value: 0,\n        label: `No, ${mmLabels.min} voters rank ${mmLabels.min} candidates randomly`,\n      },\n    ],\n  },\n];\n\n// Given a list of inputs, filter down to only those that have a given modelType\nfunction filterInputsByModelType(inputs, modelType) {\n  const modelDataid = getModelFromDisplay(modelType).dataid;\n  return inputs.filter((input) => {\n    return input.modelsUsed.includes(modelDataid);\n  });\n}\n\n// Given a formDataObject, filter down to inputs that have no modelType or have a given modelType\nfunction filterDataByModelTypes(formObject, modelType) {\n  const modelDataid = getModelFromDisplay(modelType).dataid;\n  return _.pick(\n    formObject,\n    Object.keys(formObject).filter((key) => {\n      const keySplitFromType = key.split(\"-\");\n      const hasModelType = Boolean(keySplitFromType[1]);\n      // Get keys that either don't have a model type\n      //  or have a model type that matches this modelType\n      return (\n        !hasModelType || (hasModelType && keySplitFromType[1] === modelDataid)\n      );\n    })\n  );\n}\nfunction getModelFromDisplay(selectedModelDisplay) {\n  return models.find((model) => model.display === selectedModelDisplay);\n}\n\nfunction getApiEndpoint(selectedModel) {\n  return getModelFromDisplay(selectedModel).apiEndpoint;\n}\n\nexport {\n  models,\n  modelParams,\n  modelInputs,\n  filterInputsByModelType,\n  filterDataByModelTypes,\n  getApiEndpoint,\n};\n","import React from \"react\";\nimport { Nav, Card } from \"react-bootstrap\";\n\nimport ResetButton from \"./components/ResetButton\";\nimport GenericInput from \"./inputs/GenericInput\";\nimport {\n  models,\n  modelInputs,\n  filterInputsByModelType,\n} from \"./model/rcvModelData\";\n\nfunction ModelParameters({\n  formData,\n  resetData,\n  selectedModel,\n  setFormData,\n  setSelectedModel,\n}) {\n  return (\n    <>\n      <div className=\"d-flex\">\n        <h1>Model Settings</h1>\n        <ResetButton onClick={resetData} />\n      </div>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Header>\n          <Nav\n            variant=\"tabs\"\n            defaultActiveKey={selectedModel}\n            onSelect={(keyForEachModel) => {\n              setSelectedModel(keyForEachModel);\n            }}\n          >\n            {models.map((model) => (\n              <Nav.Item key={model.id}>\n                <Nav.Link eventKey={model.display}>{model.display}</Nav.Link>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </Card.Header>\n        <Card.Body className=\"d-flex flex-wrap align-content-start\">\n          {filterInputsByModelType(modelInputs, selectedModel).map((param) => (\n            <GenericInput\n              key={param.id}\n              param={param}\n              formData={formData}\n              setFormData={setFormData}\n            />\n          ))}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(ModelParameters);\n","import React from \"react\";\n\nfunction Spinner() {\n  return (\n    <div className=\"d-flex justify-content-center align-items-center w-100 h-100\">\n      <div\n        className=\"spinner-border\"\n        style={{ height: 75, width: 75, marginTop: -75 }}\n        role=\"status\"\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React from \"react\";\n\nfunction EmptyPlaceholder() {\n  return <p>Nothing to display here</p>;\n}\n\nexport default EmptyPlaceholder;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { Table, Col, Row } from \"react-bootstrap\";\nimport { min, max, mean, modeFast, standardDeviation } from \"simple-statistics\";\n\nimport EmptyPlaceholder from \"./EmptyPlaceholder\";\n\nfunction KeyValueTable({ kv = {} }) {\n  return Object.keys(kv).length === 0 ? (\n    <EmptyPlaceholder />\n  ) : (\n    <Table striped borderless hover className=\"kv-table\">\n      <tbody>\n        {Object.entries(kv).map(([k, v]) => {\n          return (\n            <tr key={k}>\n              <td className=\"table-key\">{k}</td>\n              <td className=\"table-value\">{v}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction SimulationStatsTable({ data = [], maxSeats }) {\n  const stats = !_.isEmpty(data) && {\n    Min: min(data),\n    Max: max(data),\n    Mode: modeFast(data),\n    Mean: mean(data).toFixed(2),\n    \"Standard Deviation\": standardDeviation(data).toFixed(2),\n  };\n\n  const statsMarginalized = !_.isEmpty(stats) && {\n    Min: (stats.Min / maxSeats).toFixed(2),\n    Max: (stats.Max / maxSeats).toFixed(2),\n    Mode: (stats.Mode / maxSeats).toFixed(2),\n    Mean: (stats.Mean / maxSeats).toFixed(2),\n    \"Standard Deviation\": (stats[\"Standard Deviation\"] / maxSeats).toFixed(2),\n  };\n\n  const statsDisplay = !_.isEmpty(statsMarginalized) && {\n    Min: `${(statsMarginalized.Min * 100).toFixed(2)}% (${\n      stats.Min\n    } / ${maxSeats})`,\n    Max: `${(statsMarginalized.Max * 100).toFixed(2)}% (${\n      stats.Max\n    } / ${maxSeats})`,\n    Mode: `${(statsMarginalized.Mode * 100).toFixed(2)}% (${\n      stats.Mode\n    } / ${maxSeats})`,\n    Mean: `${(statsMarginalized.Mean * 100).toFixed(2)}% (${\n      stats.Mean\n    } / ${maxSeats})`,\n    \"Standard Deviation\": `${statsMarginalized[\"Standard Deviation\"] * 100}% (${\n      stats[\"Standard Deviation\"]\n    } / ${maxSeats})`,\n  };\n\n  return (\n    <Row className=\"m-0\">\n      <Col sm={12} className=\"pr-1 pl-1\">\n        <h5 className=\"stats-table-title\">\n          <span className=\"literal-title\">Statistics</span>\n        </h5>\n        <KeyValueTable kv={statsDisplay} />\n      </Col>\n    </Row>\n  );\n}\n\nexport default React.memo(SimulationStatsTable);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { Form } from \"react-bootstrap\";\nimport {\n  VictoryAxis,\n  VictoryChart,\n  VictoryContainer,\n  VictoryHistogram,\n  VictoryLabel,\n  VictoryTooltip,\n} from \"victory\";\nimport { mmLabels } from \"../model/constants\";\nimport SimulationStatsTable from \"./SimulationStatsTable\";\nimport variables from \"../styles/_variables.scss\";\n\nfunction SimulationResultsHistogram({\n  displayMajResults,\n  electionSimulations,\n  maxSeats,\n  selectedModel,\n  data,\n}) {\n  const pocData = (data || []).map((val) => ({ x: val }));\n  // Determine the number of elections with no POC winners\n  const electionWithoutRelevantWinners =\n    data && data.length ? electionSimulations - data.length : 0;\n  for (let i = 0; i < electionWithoutRelevantWinners; i++) {\n    pocData.push({ x: 0 });\n  }\n\n  const bins = _.range(0, maxSeats + 2, 1);\n  const barColor = displayMajResults ? variables.green : variables.purple;\n  const demographicVisualized = displayMajResults ? mmLabels.maj : mmLabels.min;\n\n  return (\n    <VictoryChart\n      style={{ parent: { fontSize: 12 } }}\n      containerComponent={\n        <VictoryContainer\n          className=\"pt-2 pb-2\"\n          style={{ height: \"auto\", maxWidth: 400, margin: \"auto\" }}\n        />\n      }\n    >\n      {/* Display pocData */}\n      <VictoryHistogram\n        style={{ labels: { fill: \"black\" }, data: { fill: barColor } }}\n        cornerRadius={0}\n        data={pocData}\n        bins={bins}\n        labelComponent={<VictoryTooltip constrainToVisibleArea />}\n        labels={({ datum }) =>\n          `# Elections with ${\n            datum.x - 0.5\n          } ${demographicVisualized} winner(s)\\n${datum.y}`\n        }\n      />\n      {/* Chart Title */}\n      <VictoryLabel\n        text={\n          _.isUndefined(electionSimulations)\n            ? `No Data`\n            : `${demographicVisualized} Candidates Elected \\n Across ${electionSimulations} ${selectedModel} Simulation(s) `\n        }\n        x={225}\n        y={18}\n        textAnchor=\"middle\"\n      />\n      {/* X axis */}\n      <VictoryAxis\n        label={`Frequency of outcome`}\n        textAnchor=\"middle\"\n        axisLabelComponent={<VictoryLabel dy={-12} />}\n        dependentAxis\n      />\n      {/* Y Axis */}\n      <VictoryAxis\n        label={`Number of ${demographicVisualized} candidates elected`}\n        tickLabelComponent={<VictoryLabel dy={-5} dx={200 / bins.length} />}\n        tickValues={bins.slice(0, bins.length - 1)}\n      />\n    </VictoryChart>\n  );\n}\n\nclass SimulationVisualization extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayMajResults: false,\n    };\n  }\n\n  toggleMajResults = () => {\n    this.setState({\n      displayMajResults: !this.state.displayMajResults,\n    });\n  };\n\n  // Only re-render when the simulationResults are new or if the displayMajResults has changed\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.simulationResults !== this.props.simulationResults ||\n      nextState.displayMajResults !== this.state.displayMajResults\n    );\n  }\n\n  render() {\n    const {\n      electionSimulations,\n      maxSeats = 1,\n      selectedModel = \"\",\n      simulationParams = {},\n      simulationResults = {},\n    } = this.props;\n    const pocElected = simulationResults.poc_elected_rcv;\n    const relevantElected = this.state.displayMajResults\n      ? pocElected.map((pocWinners) => maxSeats - pocWinners)\n      : pocElected;\n    const switchWillVisualize = !this.state.displayMajResults\n      ? mmLabels.maj\n      : mmLabels.min;\n\n    return (\n      <>\n        {!_.isUndefined(electionSimulations) && (\n          <Form.Check\n            type=\"switch\"\n            id=\"custom-switch\"\n            className=\"results-demographic-flip mt-0\"\n            value={this.state.displayMajResults}\n            onChange={this.toggleMajResults}\n            label={`View ${switchWillVisualize} results`}\n          />\n        )}\n        <SimulationResultsHistogram\n          electionSimulations={electionSimulations}\n          maxSeats={maxSeats}\n          displayMajResults={this.state.displayMajResults}\n          data={relevantElected}\n          selectedModel={selectedModel}\n        />\n        <SimulationStatsTable\n          data={relevantElected}\n          maxSeats={maxSeats}\n          simulationParams={simulationParams}\n        />\n      </>\n    );\n  }\n}\n\nexport default SimulationVisualization;\n","import { useState, useEffect, useCallback } from \"react\";\n\n// Hook\nconst useAsync = (asyncFunction, immediate = true) => {\n  const [status, setStatus] = useState(\"idle\");\n  const [value, setValue] = useState(null);\n  const [error, setError] = useState(null);\n\n  // The execute function wraps asyncFunction and\n  // handles setting state for pending, value, and error.\n  // useCallback ensures the below useEffect is not called\n  // on every render, but only if asyncFunction changes.\n  const execute = useCallback(() => {\n    setStatus(\"pending\");\n    setValue(null);\n    setError(null);\n\n    return asyncFunction()\n      .then((response) => {\n        setValue(response);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus(\"error\");\n      });\n  }, [asyncFunction]);\n\n  // Call execute if we want to fire it right away.\n  // Otherwise execute can be called later, such as\n  // in an onClick handler.\n  useEffect(() => {\n    if (immediate) {\n      execute();\n    }\n  }, [execute, immediate]);\n\n  return { execute, status, value, error };\n};\n\nexport default useAsync;\n","const simulationParams = [\n  {\n    id: \"numElectionsEachSimulation\",\n    dataid: \"numElectionsEachSimulation\",\n    initialValue: 1,\n  },\n];\n\nconst simulationInputs = [\n  {\n    id: \"numElectionsEachSimulation\",\n    dataid: \"numElectionsEachSimulation\",\n    type: \"number\",\n    min: 1,\n    max: 15,\n    fullWidth: true,\n    padding: false,\n    label: \"Elections to Simulate\",\n    helperText: \"Max 15\",\n    info: \"The number of elections to simulate with these parameters\",\n  },\n];\n\nfunction getElectionSimulationCount(formData) {\n  return parseInt(formData[\"numElectionsEachSimulation\"]);\n}\n\nexport { simulationParams, simulationInputs, getElectionSimulationCount };\n","import React, { useRef } from \"react\";\nimport axios from \"axios\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { Download, Play, Loader } from \"react-feather\";\nimport { exportComponentAsPNG } from \"react-component-export-image\";\n\nimport Spinner from \"./components/Spinner\";\nimport SimulationVisualization from \"./components/SimulationVisualization\";\nimport useAsync from \"./hooks/useAsync\";\nimport GenericInput from \"./inputs/GenericInput\";\nimport { getApiEndpoint, filterDataByModelTypes } from \"./model/rcvModelData\";\nimport { simulationInputs } from \"./model/simulationData\";\n\nfunction SaveButton({ status, simulationVisualizationRef }) {\n  return (\n    <div className=\"d-flex justify-content-between\">\n      <Button\n        onClick={() => {\n          exportComponentAsPNG(simulationVisualizationRef);\n        }}\n        className=\"d-flex justify-content-center align-items-center\"\n        size=\"sm\"\n      >\n        <Download size={16} className=\"mr-1\" />\n        Save\n      </Button>\n    </div>\n  );\n}\n\nfunction RunButton({ execute, status }) {\n  return (\n    <Button\n      onClick={execute}\n      className=\"d-flex ml-1 justify-content-center align-items-center\"\n      size=\"sm\"\n      disabled={status === \"pending\"}\n    >\n      {status !== \"pending\" ? (\n        <>\n          <Play size={16} className=\"mr-1\" />\n          Run\n        </>\n      ) : (\n        <>\n          <Loader size={16} className=\"mr-1\" />\n          Loading...\n        </>\n      )}\n    </Button>\n  );\n}\n\nfunction SimulationInformation({\n  combineFormData,\n  formData,\n  getSeats,\n  getElectionSimulationCount,\n  setFormData,\n  selectedModel,\n}) {\n  // Get the API Endpoint for the selected model\n  const selectedModelEndpoint = getApiEndpoint(selectedModel);\n  // Build the API URL\n  const apiURL =\n    process.env.REACT_APP_API_BASEURL +\n    process.env.REACT_APP_API_SLUG +\n    selectedModelEndpoint;\n\n  // Get relevant params, and define the function that gets simulation results\n  const relevantParams = filterDataByModelTypes(\n    combineFormData(),\n    selectedModel\n  );\n  const fetchData = async () => {\n    const response = await axios.get(apiURL, {\n      // Filter all the query params by the selectedModel\n      params: relevantParams,\n    });\n    return response.data;\n  };\n\n  // Store the results of simulations in state, as well as request status/error\n  const { execute, status, value, error } = useAsync(fetchData, false);\n\n  // Create a ref to the SimulationInformation\n  const simulationVisualizationRef = useRef();\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <h1>Simulations</h1>\n      </div>\n      <Card className=\"parameter-container flex-grow-1\">\n        <Card.Body>\n          {/* First div: the inputs in the form of a row, and the button to trigger sims */}\n          {simulationInputs.map((param) => {\n            return (\n              <GenericInput\n                key={param.id}\n                param={param}\n                formData={formData}\n                padding={false}\n                setFormData={setFormData}\n              />\n            );\n          })}\n          {/* Second div: the results of the current simulation */}\n          <div className=\"d-flex justify-content-between\">\n            <h4>Election Results</h4>\n            {/* Download and save buttons */}\n            <div className=\"d-flex\">\n              {status === \"success\" && (\n                <SaveButton\n                  status={status}\n                  simulationVisualizationRef={simulationVisualizationRef}\n                />\n              )}\n              <RunButton execute={execute} status={status} />\n            </div>\n          </div>\n          {/* When errors are present, log them to the console */}\n          {status === \"error\" && (\n            <p>\n              There was an error processing those simulations.\n              {console.error(error)}\n            </p>\n          )}\n          {/* While loading, display a spinner */}\n          {status === \"pending\" && (\n            <div className=\"d-flex flex-column w-100\">\n              <div style={{ height: \"300px\" }}>\n                <Spinner />\n              </div>\n            </div>\n          )}\n          {/* Show an empty viz when no simulations have been triggered or completed  */}\n          {status === \"idle\" && (\n            <SimulationVisualization maxBins={getSeats()} />\n          )}\n          {status === \"success\" && (\n            <SimulationVisualization\n              ref={simulationVisualizationRef}\n              maxSeats={getSeats()}\n              electionSimulations={getElectionSimulationCount()}\n              simulationResults={value}\n              simulationParams={relevantParams}\n              selectedModel={selectedModel}\n            />\n          )}\n          {/* TODO: Implement local history of simulations in order to compare and contrast over time */}\n          {/* <div>\n            <h4>History of Simulations</h4>\n            <EmptyPlceholder />\n          </div> */}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(SimulationInformation);\n","import _ from \"lodash\";\nimport { useState } from \"react\";\n\n// Hook\nfunction useLocalStorage(stateObjectName, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by stateObjectName\n      const storedState = window.localStorage.getItem(stateObjectName);\n      // Return initialValue if this is new to localStorage\n      if (_.isNull(storedState)) {\n        return initialValue;\n      }\n      // If the keys on the storedState match the current one, use the storedState;\n      // else, clear it and use the current state\n      const parsedStoredState = JSON.parse(storedState);\n      const validStateObjectKeys = Object.keys(initialValue);\n      const storedStateKeys = Object.keys(parsedStoredState);\n      if (_.isEqual(storedStateKeys, validStateObjectKeys)) {\n        return parsedStoredState;\n      }\n      window.localStorage.removeItem(stateObjectName);\n      return initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(\n        stateObjectName,\n        JSON.stringify(valueToStore)\n      );\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nfunction AboutPage() {\n  return (\n    <Container>\n      {/* <Row style={{ height: \"max\" }}> */}\n      <h1 className=\"text-center\">About This Project</h1>\n      <div>\n        <h3>Modelling voting behavior</h3>\n        <p>\n          Voting is an incredibly complex process, and any attempt to model it\n          is bound to oversimplify the way people vote, especially in ranked\n          elections, where a voter has so many more ways to make their voice\n          heard. With this in mind, this app uses multiple models of ranking,\n          some classical and some new. They all take the same basic input.\n        </p>\n        <h3>Basic inputs to the models</h3>\n        <p>\n          All the models take some basic inputs, namely the support from each\n          group for each class of candidate (minority- or majority-preferred),\n          which should be numbers between 0 and 1. These values can be estimated\n          by analyzing single-winner elections, inferred from survey results, or\n          set to hypothetical values. Each model interprets these support values\n          slightly differently, as detailed below.\n        </p>\n        <h3>How the model works: Plackett-Luce</h3>\n        <p>\n          The Plackett-Luce model is a classical model of statistical ranking\n          which has already been applied to study ranked choice voting in\n          Ireland [1]. Let's suppose the support for Candidate A from a voting\n          group is twice the support for Candidate B. Under the Plackett-Luce\n          model, we take this to mean that a voter is twice as likely to put\n          Candidate A first as to put Candidate B first. In fact, the model\n          assumes that this trend goes <em>all the way down the ballot</em>.\n          That is, if a voter has not ranked either A or B yet on their ballot,\n          then they are still twice as likely to write down Candidate A's name\n          than Candidate B when they get to the next rank. See [2] for\n          mathematical details. It is unrealistic to expect the support for each\n          class of candidates to be completely uniform, so to divide up the\n          total support among candidates of a given class, we sample from a\n          symmetric Dirichlet distribution. The Dirichlet distribution has one\n          parameter (called concentration) which can be used to choose between\n          mostly even division of support (concentration &gt;&gt; 1), and\n          support concentrated on just a few candidates (concentration &lt;&lt;\n          1). The default concentration value of 1.0 makes every division of the\n          support equally likely, roughly speaking. We therefore refer to this\n          parameter as\n          <em>evenness of support</em> in the Model input tab.\n        </p>\n        <h3>How the model works: Bradley-Terry</h3>\n        <p>\n          The paired comparison model is based on the idea that what matters in\n          a ranking is who is preferred over whom. Suppose the support by a\n          voting group for Candidate A is <em>a</em> and the support for\n          Candidate B is <em> b</em>. This the model sets the probability that a\n          voter in the group ranks Candidate A above Candidate B at{\" \"}\n          <em>a/(a+b)</em>. The probability of a full ranking is just the\n          product of the probabilities associated with the order of each pair of\n          candidates, with a normalizing constant so that everything sums to\n          one. See [2] for mathematical details. As with the Plackett-Luce\n          model, we use a Dirichlet sampler to divide up the support among the\n          candidates.\n        </p>\n        <h3>How the model works: Alternating crossover</h3>\n        <p>\n          This model posits that there are two kinds of voters in each group:\n          block voters and crossover voters. Block voters always vote for\n          ingroup candidates first and then outgroup candidates. Crossover\n          voters alternate between the two classes of candidates, starting with\n          an outgroup candidate (hence the name). This only tells you the type\n          of candidate at each position in a ballot, however, so further choices\n          are necessary to determine the exact order. For each group of voters\n          and group of candidates, we allow two choices: random ordering by each\n          voter, or consistent ordering by each voter. This model has been used\n          in previous analyses of ranked voting by the MGGG at Tufts University\n          (see [3,4] below).\n        </p>\n        <h3>How the model works: Cambridge sampler</h3>\n        <p>\n          Each voter's first choice under this model is the same as under\n          alternating crossover, i.e. an ingroup candidate for block voters and\n          an outgroup candidate for crossover voters. However, instead of\n          allowing only a block ballot or alternating ballot, the types of\n          candidates in the rest of the ballot are determined by sampling from\n          the ballots in a decade's worth of Cambridge MA ranked choice city\n          council elections. Once the type of candidate (ingroup or outgroup) at\n          each rank has been chosen, random ordering or consistent ordering is\n          applied to fill in the ballot with candidate names just as with the\n          alternating crossover model.\n        </p>\n        <h3>References</h3>\n        [1] Gormley, I.S, and Murphy, T.B.{\" \"}\n        <em>\n          Exploring voting blocs within the Irish electorate: A mixture modeling\n          approach.\n        </em>{\" \"}\n        Journal of the American Statistical Association 103.483 (2008):\n        1014-1027.\n        <br />\n        [2] Critchlow, D.E., Fligner, M.A. and Verducci, J.S., 1991.{\" \"}\n        <em>Probability models on rankings</em>. Journal of mathematical\n        psychology, 35(3), pp.294-318.\n        <br />\n        [3] MGGG, <em>Election Reform in Lowell MA, </em>{\" \"}\n        <a href=\"https://mggg.org/lowell\">https://mggg.org/lowell</a>\n        <br />\n        [4] MGGG,{\" \"}\n        <em>\n          Analysis of county commission elections in Yakima County WA,{\" \"}\n        </em>{\" \"}\n        <a href=\"https://mggg.org/uploads/yakima.pdf\">\n          https://mggg.org/uploads/yakima.pdf\n        </a>\n      </div>\n    </Container>\n  );\n}\n\nexport default AboutPage;\n","import SimulationPage from \"./SimulationPage\";\nimport AboutPage from \"./AboutPage\";\n\n// Config file serving as a single point of truth for all application routes\nconst routes = [\n  {\n    path: `/about`,\n    display: \"About\",\n    component: AboutPage,\n  },\n  {\n    path: `/`,\n    isHome: \"true\",\n    display: \"Home\",\n    component: SimulationPage,\n  },\n];\n\nfunction getHomePath(routes) {\n  return routes.find((route) => route.isHome).path;\n}\n\nexport { routes, getHomePath };\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport VoterParameters from \"../VoterParameters\";\nimport ElectionParameters from \"../ElectionParameters\";\nimport ModelParameters from \"../ModelParameters\";\nimport SimulationInformation from \"../SimulationInformation\";\nimport { electionParams, getSeats } from \"../model/electionData\";\nimport { voterParams } from \"../model/voterData\";\nimport {\n  simulationParams,\n  getElectionSimulationCount,\n} from \"../model/simulationData\";\nimport { models, modelParams } from \"../model/rcvModelData\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nfunction SimulationPage() {\n  // Set the initial ElectionState\n  const initialElectionState = electionParams.reduce((accum, p) => {\n    accum[p.dataid] = p.initialValue;\n    return accum;\n  }, {});\n  const [electionState, setElectionState] = useLocalStorage(\n    \"electionState\",\n    initialElectionState\n  );\n  // Set the initial VoterState\n  const initialVoterState = voterParams.reduce((accum, p) => {\n    accum[p.dataid] = p.initialValue;\n    return accum;\n  }, {});\n  const [voterState, setVoterState] = useLocalStorage(\n    \"voterState\",\n    initialVoterState\n  );\n  // Set the initial ModelState\n  const initialModelState = modelParams.reduce((accum, p) => {\n    accum[p.dataid] = p.initialValue;\n    return accum;\n  }, {});\n  const [modelState, setModelState] = useLocalStorage(\n    \"modelState\",\n    initialModelState\n  );\n  // Set the initial Simulation\n  const initialSimulationState = simulationParams.reduce((accum, p) => {\n    accum[p.dataid] = p.initialValue;\n    return accum;\n  }, {});\n  const [simulationState, setSimulationState] = useLocalStorage(\n    \"simulationState\",\n    initialSimulationState\n  );\n\n  // Store the currently selected model\n  const [selectedModel, setSelectedModel] = useLocalStorage(\n    \"selectedModel\",\n    models[0].display\n  );\n  // Combine separate input states\n  const combineFormData = () => {\n    return {\n      ...electionState,\n      ...voterState,\n      ...modelState,\n      ...simulationState,\n    };\n  };\n\n  const getSeatsFromState = () => {\n    return getSeats(electionState);\n  };\n  const getElectionSimulationCountFromState = () => {\n    return getElectionSimulationCount(simulationState);\n  };\n\n  return (\n    <Container fluid>\n      <Row style={{ height: \"max\" }}>\n        <Col md={7} className=\"pb-2 d-flex flex-column\">\n          <ElectionParameters\n            formData={electionState}\n            setFormData={setElectionState}\n            resetData={() => setElectionState(initialElectionState)}\n          />\n          <VoterParameters\n            formData={voterState}\n            setFormData={setVoterState}\n            resetData={() => setVoterState(initialVoterState)}\n          />\n          <ModelParameters\n            models={models}\n            selectedModel={selectedModel}\n            setSelectedModel={setSelectedModel}\n            formData={modelState}\n            setFormData={setModelState}\n            resetData={() => setModelState(initialModelState)}\n          />\n        </Col>\n        <Col md={5} className=\"pb-2 d-flex flex-column\">\n          <SimulationInformation\n            combineFormData={combineFormData}\n            formData={simulationState}\n            getSeats={getSeatsFromState}\n            getElectionSimulationCount={getElectionSimulationCountFromState}\n            setFormData={setSimulationState}\n            selectedModel={selectedModel}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SimulationPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { getHomePath } from \"./pages/routes.js\";\n\nfunction AppHeader(props) {\n  return (\n    <Navbar className=\"nav-header\" variant=\"dark\" expand=\"md\">\n      <Navbar.Brand href={getHomePath(props.routes)}>\n        Modeling Representation <br className=\"d-xs-block d-sm-none\" /> with\n        Ranked Choice Voting\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Nav className=\"justify-content-end\">\n          {props.routes.reverse().map((route, i) => (\n            <Nav.Item className=\"text-right\" key={route.display}>\n              <Nav.Link as={Link} to={route.path} key={i} href={route.path}>\n                {route.display}\n              </Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AppHeader;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AppHeader from \"./AppHeader\";\nimport { routes } from \"./pages/routes\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <AppHeader routes={routes} />\n      <Switch>\n        {routes.map((route, i) => (\n          <Route path={route.path} key={i}>\n            <route.component />\n          </Route>\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#c08c33\",\"green\":\"#4b9460\",\"purple\":\"#4b3f72\"};"],"sourceRoot":""}